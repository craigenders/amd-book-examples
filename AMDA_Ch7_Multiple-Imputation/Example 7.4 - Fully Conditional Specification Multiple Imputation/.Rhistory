# define binary variable as factor
dat$lunchasst <- factor(data$lunchasst, levels = c(0,1))
# select variables
vars <- c("lunchasst", "stanread","mathpre", "mathpost")
# joint model imputation with jomo
imps <- jomo(dat[vars], nburn = 1000, nbetween = 1000, nimp = 100)
# compute change score and save data
imps$change <- imps$mathpost - imps$mathpre
save(imps, file = paste0(getwd(), "/imps.R"))
# load(file = paste0(getwd(), "/imps.R"))
# analysis and pooling
implist <- as.mitml.list(split(impdata, impdata$Imputation))
analysis <- with(implist, lm(change ~ 1))
estimates <- testEstimates(analysis, var.comp = T, df.com = 249)
estimates
confint(estimates, level = .95)
estimates <- testEstimates(analysis, var.comp = T, df.com = NULL)
estimates
confint(estimates, level = .95)
resultsbyimp <- matrix(0, nrow = 100, ncol = 2)
for(m in 1:100){
impdat <- impdata[impdata$Imputation == m, c("mathpre", "mathpost")]
change <- impdat$mathpost - impdat$mathpre
resultsbyimp[m,1] <- mean(change)
resultsbyimp[m,2] <- sd(change) / sqrt(length(change))
}
write.table(resultsbyimp, file = "~/desktop/jmest.dat", col.names = F, row.names = T)
descbyimp <- matrix(0, nrow = 100, ncol = 4)
for(m in 1:100){
impdat <- impdata[impdata$Imputation == m, c("mathpre", "mathpost")]
descbyimp[m,1] <- mean(impdat$mathpre)
descbyimp[m,2] <- sd(impdat$mathpre)
descbyimp[m,3] <- mean(impdat$mathpost)
descbyimp[m,4] <- sd(impdat$mathpost)
}
write.table(descbyimp, file = "~/desktop/jmdesc.dat", col.names = F, row.names = T)
# analysis and pooling
implist <- as.mitml.list(split(imps, imps$Imputation))
analysis <- with(implist, lm(change ~ 1))
estimates <- testEstimates(analysis, var.comp = T, df.com = 249)
estimates
confint(estimates, level = .95)
resultsbyimp <- matrix(0, nrow = 100, ncol = 2)
for(m in 1:100){
impdat <- impdata[impdata$Imputation == m, c("mathpre", "mathpost")]
change <- impdat$mathpost - impdat$mathpre
resultsbyimp[m,1] <- mean(change)
resultsbyimp[m,2] <- sd(change) / sqrt(length(change))
}
write.table(resultsbyimp, file = "~/desktop/jmest.dat", col.names = F, row.names = T)
resultsbyimp <- matrix(0, nrow = 100, ncol = 2)
for(m in 1:100){
impdat <- imps[imps$Imputation == m, c("mathpre", "mathpost")]
change <- imps$mathpost - impimpsdat$mathpre
resultsbyimp[m,1] <- mean(change)
resultsbyimp[m,2] <- sd(change) / sqrt(length(change))
}
write.table(resultsbyimp, file = "~/desktop/jmest.dat", col.names = F, row.names = T)
m <- 1
impdat <- imps[imps$Imputation == m, c("mathpre", "mathpost")]
impdat
resultsbyimp <- matrix(0, nrow = 100, ncol = 2)
for(m in 1:100){
impdat <- imps[imps$Imputation == m, c("mathpre", "mathpost")]
change <- imps$mathpost - imps$mathpre
resultsbyimp[m,1] <- mean(change)
resultsbyimp[m,2] <- sd(change) / sqrt(length(change))
}
write.table(resultsbyimp, file = "~/desktop/jmest.dat", col.names = F, row.names = T)
resultsbyimp <- matrix(0, nrow = 100, ncol = 2)
for(m in 1:100){
impdat <- imps[imps$Imputation == m, c("mathpre", "mathpost")]
change <- impdat$mathpost - impdat$mathpre
resultsbyimp[m,1] <- mean(change)
resultsbyimp[m,2] <- sd(change) / sqrt(length(change))
}
write.table(resultsbyimp, file = "~/desktop/jmest.dat", col.names = F, row.names = T)
resultsbyimp <- matrix(0, nrow = 100, ncol = 6)
for(m in 1:100){
impdat <- imps[imps$Imputation == m, c("mathpre", "mathpost")]
change <- impdat$mathpost - impdat$mathpre
resultsbyimp[m,1] <- mean(impdat$mathpre)
resultsbyimp[m,2] <- sd(impdat$mathpre)
resultsbyimp[m,3] <- mean(impdat$mathpost)
resultsbyimp[m,4] <- sd(impdat$mathpost)
resultsbyimp[m,5] <- mean(change)
resultsbyimp[m,6] <- sd(change) / sqrt(length(change))
}
write.table(resultsbyimp, file = "~/desktop/jmest.dat", col.names = F, row.names = T)
load(file = paste0(getwd(), "/imps.R"))
resultsbyimp <- matrix(0, nrow = 100, ncol = 6)
for(m in 1:100){
impdat <- imps[imps$Imputation == m, c("mathpre", "mathpost")]
change <- impdat$mathpost - impdat$mathpre
resultsbyimp[m,1] <- mean(impdat$mathpre)
resultsbyimp[m,2] <- sd(impdat$mathpre)
resultsbyimp[m,3] <- mean(impdat$mathpost)
resultsbyimp[m,4] <- sd(impdat$mathpost)
resultsbyimp[m,5] <- mean(change)
resultsbyimp[m,6] <- sd(change) / sqrt(length(change))
}
write.table(resultsbyimp, file = "~/desktop/jmest.dat", col.names = F, row.names = T)
imps <- read.table(file = "~/dropbox/working/applied missing data v2/examples/mi/7.5 - fcs/imps.dat")
names(impdata) <- c("Imputation", "id", "male", "lunchasst", "achievegrp", "stanread", "efficacy", "anxiety", "mathpre", "mathpost")
imps <- read.table(file = "~/dropbox/working/applied missing data v2/examples/mi/7.5 - fcs/imps.dat")
names(imps) <- c("Imputation", "id", "male", "lunchasst", "achievegrp", "stanread", "efficacy", "anxiety", "mathpre", "mathpost")
resultsbyimp <- matrix(0, nrow = 100, ncol = 6)
for(m in 1:100){
impdat <- imps[imps$Imputation == m, c("mathpre", "mathpost")]
change <- impdat$mathpost - impdat$mathpre
resultsbyimp[m,1] <- mean(impdat$mathpre)
resultsbyimp[m,2] <- sd(impdat$mathpre)
resultsbyimp[m,3] <- mean(impdat$mathpost)
resultsbyimp[m,4] <- sd(impdat$mathpost)
resultsbyimp[m,5] <- mean(change)
resultsbyimp[m,6] <- sd(change) / sqrt(length(change))
}
write.table(resultsbyimp, file = "~/desktop/fcsest.dat", col.names = F, row.names = T)
# load packages
library("jomo")
library("mitml")
# set random number seed for imputation
set.seed(90291)
# set working directory to the location of this script
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# read data from working directory
dat <- read.table(paste0(getwd(), "/math.dat"))
names(dat) <- c("id", "male", "lunchasst", "achievegrp", "stanread", "efficacy", "anxiety", "mathpre", "mathpost")
# recode missing values
dat[dat == 999] <- NA
# define binary variable as factor
dat$lunchasst <- factor(data$lunchasst, levels = c(0,1))
# select variables
vars <- c("lunchasst", "stanread","mathpre", "mathpost")
# joint model imputation with jomo
imps <- jomo(dat[vars], nburn = 1000, nbetween = 1000, nimp = 100)
# compute change score and save data
imps$change <- imps$mathpost - imps$mathpre
save(imps, file = paste0(getwd(), "/imps.R"))
# load(file = paste0(getwd(), "/imps.R"))
# analysis and pooling
implist <- as.mitml.list(split(imps, imps$Imputation))
analysis <- with(implist, lm(change ~ 1))
estimates <- testEstimates(analysis, var.comp = T, df.com = 249)
estimates
confint(estimates, level = .95)
estimates <- testEstimates(analysis, var.comp = T, df.com = NULL)
estimates
confint(estimates, level = .95)
# barnard & rubin degrees of freedom
estimates <- testEstimates(analysis, var.comp = T, df.com = 249)
confint(estimates, level = .95)
estimates <- testEstimates(analysis, var.comp = T, df.com = 249)
estimates
confint(estimates, level = .95)
# load packages
library("jomo")
library("mitml")
# set random number seed for imputation
set.seed(90291)
# set working directory to the location of this script
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# read data from working directory
imps <- read.table(paste0(getwd(), "/imps.dat"))
names(imps) <- c("Imputation", "id", "male", "lunchasst", "achievegrp", "stanread", "efficacy", "anxiety", "mathpre", "mathpost")
# compute change score and save data
imps$change <- imps$mathpost - imps$mathpre
# analysis and pooling
implist <- as.mitml.list(split(imps, imps$Imputation))
analysis <- with(implist, lm(change ~ 1))
# classic rubin degrees of freedom
estimates <- testEstimates(analysis, var.comp = T, df.com = NULL)
estimates
# barnard & rubin degrees of freedom
estimates <- testEstimates(analysis, var.comp = T, df.com = 249)
estimates
confint(estimates, level = .95)
# load packages
library("jomo")
library("mitml")
# set working directory to the location of this script
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# read data from working directory
imps <- read.table(paste0(getwd(), "/imps.dat"))
names(imps) <- c("Imputation", "id", "male", "lunchasst", "achievegrp", "stanread", "efficacy", "anxiety", "mathpre", "mathpost")
# compute change score and save data
imps$change <- imps$mathpost - imps$mathpre
# analysis and pooling
implist <- as.mitml.list(split(imps, imps$Imputation))
analysis <- with(implist, lm(change ~ 1))
# classic rubin degrees of freedom
estimates <- testEstimates(analysis, var.comp = T, df.com = NULL)
estimates
# barnard & rubin degrees of freedom
estimates <- testEstimates(analysis, var.comp = T, df.com = 249)
estimates
confint(estimates, level = .95)
# load packages
library("jomo")
library("mitml")
# set working directory to the location of this script
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# read data from working directory
imps <- read.table(paste0(getwd(), "/imps.dat"))
names(imps) <- c("Imputation", "id", "male", "lunchasst", "achievegrp", "stanread", "efficacy", "anxiety", "mathpre", "mathpost")
# compute change score and save data
imps$change <- imps$mathpost - imps$mathpre
# analysis and pooling
implist <- as.mitml.list(split(imps, imps$Imputation))
analysis <- with(implist, lm(change ~ 1))
# classic rubin degrees of freedom
estimates <- testEstimates(analysis, var.comp = T, df.com = NULL)
estimates
# barnard & rubin degrees of freedom
estimates <- testEstimates(analysis, var.comp = T, df.com = 249)
estimates
confint(estimates, level = .95)
# load packages
library("jomo")
library("mitml")
# set working directory to the location of this script
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# read data from working directory
imps <- read.table(paste0(getwd(), "/imps.dat"))
names(imps) <- c("Imputation", "id", "male", "lunchasst", "achievegrp", "stanread", "efficacy", "anxiety", "mathpre", "mathpost")
# compute change score and save data
imps$change <- imps$mathpost - imps$mathpre
# analysis and pooling
implist <- as.mitml.list(split(imps, imps$Imputation))
analysis <- with(implist, lm(change ~ 1))
# classic rubin degrees of freedom
estimates <- testEstimates(analysis, var.comp = T, df.com = NULL)
estimates
# barnard & rubin degrees of freedom
estimates <- testEstimates(analysis, var.comp = T, df.com = 249)
estimates
confint(estimates, level = .95)
# load packages
library("jomo")
library("mitml")
# set working directory to the location of this script
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# read data from working directory
imps <- read.table(paste0(getwd(), "/imps.dat"))
names(imps) <- c("Imputation", "id", "male", "lunchasst", "achievegrp", "stanread", "efficacy", "anxiety", "mathpre", "mathpost")
# compute change score and save data
imps$change <- imps$mathpost - imps$mathpre
# analysis and pooling
implist <- as.mitml.list(split(imps, imps$Imputation))
analysis <- with(implist, lm(change ~ 1))
# classic rubin degrees of freedom
estimates <- testEstimates(analysis, var.comp = T, df.com = NULL)
estimates
# barnard & rubin degrees of freedom
estimates <- testEstimates(analysis, var.comp = T, df.com = 249)
estimates
confint(estimates, level = .95)
# load packages
library("jomo")
library("mitml")
# set working directory to the location of this script
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# read data from working directory
imps <- read.table(paste0(getwd(), "/imps.dat"))
names(imps) <- c("Imputation", "id", "male", "lunchasst", "achievegrp", "stanread", "efficacy", "anxiety", "mathpre", "mathpost")
# compute change score and save data
imps$change <- imps$mathpost - imps$mathpre
# analysis and pooling
implist <- as.mitml.list(split(imps, imps$Imputation))
analysis <- with(implist, lm(change ~ 1))
# classic rubin degrees of freedom
estimates <- testEstimates(analysis, var.comp = T, df.com = NULL)
estimates
# barnard & rubin degrees of freedom
estimates <- testEstimates(analysis, var.comp = T, df.com = 249)
estimates
confint(estimates, level = .95)
# load packages
library("jomo")
library("mitml")
# set working directory to the location of this script
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# read data from working directory
imps <- read.table(paste0(getwd(), "/imps.dat"))
names(imps) <- c("Imputation", "id", "male", "lunchasst", "achievegrp", "stanread", "efficacy", "anxiety", "mathpre", "mathpost")
# compute change score and save data
imps$change <- imps$mathpost - imps$mathpre
# analysis and pooling
implist <- as.mitml.list(split(imps, imps$Imputation))
analysis <- with(implist, lm(change ~ 1))
# classic rubin degrees of freedom
estimates <- testEstimates(analysis, var.comp = T, df.com = NULL)
estimates
# barnard & rubin degrees of freedom
estimates <- testEstimates(analysis, var.comp = T, df.com = 249)
estimates
confint(estimates, level = .95)
# load packages
library("jomo")
library("mitml")
# set working directory to the location of this script
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# read data from working directory
imps <- read.table(paste0(getwd(), "/imps.dat"))
names(imps) <- c("Imputation", "id", "male", "lunchasst", "achievegrp", "stanread", "efficacy", "anxiety", "mathpre", "mathpost")
# compute change score and save data
imps$change <- imps$mathpost - imps$mathpre
# analysis and pooling
implist <- as.mitml.list(split(imps, imps$Imputation))
analysis <- with(implist, lm(change ~ 1))
# classic rubin degrees of freedom
estimates <- testEstimates(analysis, var.comp = T, df.com = NULL)
estimates
# barnard & rubin degrees of freedom
estimates <- testEstimates(analysis, var.comp = T, df.com = 249)
estimates
confint(estimates, level = .95)
# load packages
library("jomo")
library("mitml")
# set working directory to the location of this script
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# read data from working directory
imps <- read.table(paste0(getwd(), "/imps.dat"))
names(imps) <- c("Imputation", "id", "male", "lunchasst", "achievegrp", "stanread", "efficacy", "anxiety", "mathpre", "mathpost")
# compute change score and save data
imps$change <- imps$mathpost - imps$mathpre
# analysis and pooling
implist <- as.mitml.list(split(imps, imps$Imputation))
analysis <- with(implist, lm(change ~ 1))
# classic rubin degrees of freedom
estimates <- testEstimates(analysis, var.comp = T, df.com = NULL)
estimates
# barnard & rubin degrees of freedom
estimates <- testEstimates(analysis, var.comp = T, df.com = 249)
estimates
confint(estimates, level = .95)
# load packages
library("jomo")
library("mitml")
# set working directory to the location of this script
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# read data from working directory
imps <- read.table(paste0(getwd(), "/imps.dat"))
names(imps) <- c("Imputation", "id", "male", "lunchasst", "achievegrp", "stanread", "efficacy", "anxiety", "mathpre", "mathpost")
# compute change score and save data
imps$change <- imps$mathpost - imps$mathpre
# analysis and pooling
implist <- as.mitml.list(split(imps, imps$Imputation))
analysis <- with(implist, lm(change ~ 1))
# classic rubin degrees of freedom
estimates <- testEstimates(analysis, var.comp = T, df.com = NULL)
estimates
# barnard & rubin degrees of freedom
estimates <- testEstimates(analysis, var.comp = T, df.com = 249)
estimates
confint(estimates, level = .95)
# load packages
library("jomo")
library("mitml")
# set working directory to the location of this script
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# read data from working directory
imps <- read.table(paste0(getwd(), "/imps.dat"))
names(imps) <- c("Imputation", "id", "male", "lunchasst", "achievegrp", "stanread", "efficacy", "anxiety", "mathpre", "mathpost")
# compute change score and save data
imps$change <- imps$mathpost - imps$mathpre
# analysis and pooling
implist <- as.mitml.list(split(imps, imps$Imputation))
analysis <- with(implist, lm(change ~ 1))
# classic rubin degrees of freedom
estimates <- testEstimates(analysis, var.comp = T, df.com = NULL)
estimates
# barnard & rubin degrees of freedom
estimates <- testEstimates(analysis, var.comp = T, df.com = 249)
estimates
confint(estimates, level = .95)
imps <- read.table(file = "~/dropbox/working/applied missing data v2/examples/mi/7.5 - fcs/imps.dat")
names(imps) <- c("Imputation", "id", "male", "lunchasst", "achievegrp", "stanread", "efficacy", "anxiety", "mathpre", "mathpost")
resultsbyimp <- matrix(0, nrow = 100, ncol = 6)
for(m in 1:100){
impdat <- imps[imps$Imputation == m, c("mathpre", "mathpost")]
change <- impdat$mathpost - impdat$mathpre
resultsbyimp[m,1] <- mean(impdat$mathpre)
resultsbyimp[m,2] <- sd(impdat$mathpre)
resultsbyimp[m,3] <- mean(impdat$mathpost)
resultsbyimp[m,4] <- sd(impdat$mathpost)
resultsbyimp[m,5] <- mean(change)
resultsbyimp[m,6] <- sd(change) / sqrt(length(change))
}
write.table(resultsbyimp, file = "~/desktop/fcsest.dat", col.names = F, row.names = T)
# load packages
library("jomo")
library("mitml")
# set working directory to the location of this script
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# read data from working directory
imps <- read.table(paste0(getwd(), "/imps.dat"))
names(imps) <- c("Imputation", "id", "male", "lunchasst", "achievegrp", "stanread", "efficacy", "anxiety", "mathpre", "mathpost")
# compute change score and save data
imps$change <- imps$mathpost - imps$mathpre
# analysis and pooling
implist <- as.mitml.list(split(imps, imps$Imputation))
analysis <- with(implist, lm(change ~ 1))
# classic rubin degrees of freedom
estimates <- testEstimates(analysis, var.comp = T, df.com = NULL)
estimates
# barnard & rubin degrees of freedom
estimates <- testEstimates(analysis, var.comp = T, df.com = 249)
estimates
confint(estimates, level = .95)
library("mitml")
# load packages
library("jomo")
library("mitml")
# set working directory to the location of this script
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# read data from working directory
imps <- read.table(paste0(getwd(), "/imps.dat"))
names(imps) <- c("Imputation", "id", "male", "lunchasst", "achievegrp", "stanread", "efficacy", "anxiety", "mathpre", "mathpost")
# compute change score and save data
imps$change <- imps$mathpost - imps$mathpre
# analysis and pooling
implist <- as.mitml.list(split(imps, imps$Imputation))
analysis <- with(implist, lm(change ~ 1))
# classic rubin degrees of freedom
estimates <- testEstimates(analysis, var.comp = T, df.com = NULL)
estimates
# barnard & rubin degrees of freedom
estimates <- testEstimates(analysis, var.comp = T, df.com = 249)
estimates
confint(estimates, level = .95)
# load packages
library("jomo")
library("mitml")
# set working directory to the location of this script
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# read data from working directory
imps <- read.table(paste0(getwd(), "/imps.dat"))
names(imps) <- c("Imputation", "id", "male", "lunchasst", "achievegrp", "stanread", "efficacy", "anxiety", "mathpre", "mathpost")
# compute change score and save data
imps$change <- imps$mathpost - imps$mathpre
# analysis and pooling
implist <- as.mitml.list(split(imps, imps$Imputation))
analysis <- with(implist, lm(change ~ 1))
# classic rubin degrees of freedom
estimates <- testEstimates(analysis, var.comp = T, df.com = NULL)
estimates
# barnard & rubin degrees of freedom
estimates <- testEstimates(analysis, var.comp = T, df.com = 249)
estimates
confint(estimates, level = .95)
# load packages
library("jomo")
library("mitml")
# set working directory to the location of this script
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# read data from working directory
imps <- read.table(paste0(getwd(), "/imps.dat"))
names(imps) <- c("Imputation", "id", "male", "lunchasst", "achievegrp", "stanread", "efficacy", "anxiety", "mathpre", "mathpost")
# compute change score and save data
imps$change <- imps$mathpost - imps$mathpre
# analysis and pooling
implist <- as.mitml.list(split(imps, imps$Imputation))
analysis <- with(implist, lm(change ~ 1))
# classic rubin degrees of freedom
estimates <- testEstimates(analysis, var.comp = T, df.com = NULL)
estimates
# barnard & rubin degrees of freedom
estimates <- testEstimates(analysis, var.comp = T, df.com = 249)
estimates
confint(estimates, level = .95)
# load packages
library("jomo")
library("mitml")
# set working directory to the location of this script
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# read data from working directory
imps <- read.table(paste0(getwd(), "/imps.dat"))
names(imps) <- c("Imputation", "id", "male", "lunchasst", "achievegrp", "stanread", "efficacy", "anxiety", "mathpre", "mathpost")
# compute change score and save data
imps$change <- imps$mathpost - imps$mathpre
# analysis and pooling
implist <- as.mitml.list(split(imps, imps$Imputation))
analysis <- with(implist, lm(change ~ 1))
# classic rubin degrees of freedom
estimates <- testEstimates(analysis, var.comp = T, df.com = NULL)
estimates
# barnard & rubin degrees of freedom
estimates <- testEstimates(analysis, var.comp = T, df.com = 249)
estimates
confint(estimates, level = .95)
# load packages
library("jomo")
library("mitml")
# set working directory to the location of this script
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# read data from working directory
imps <- read.table(paste0(getwd(), "/imps.dat"))
names(imps) <- c("Imputation", "id", "male", "lunchasst", "achievegrp", "stanread", "efficacy", "anxiety", "mathpre", "mathpost")
# compute change score and save data
imps$change <- imps$mathpost - imps$mathpre
# analysis and pooling
implist <- as.mitml.list(split(imps, imps$Imputation))
analysis <- with(implist, lm(change ~ 1))
# classic rubin degrees of freedom
estimates <- testEstimates(analysis, var.comp = T, df.com = NULL)
estimates
# barnard & rubin degrees of freedom
estimates <- testEstimates(analysis, var.comp = T, df.com = 249)
estimates
confint(estimates, level = .95)
