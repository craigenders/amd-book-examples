# identify auxiliary variables with missing data indicators and residual correlations
# requires fdir and lavaan packages
# set working directory
fdir::set()
# read imputed data from working directory
dat <- read.table("pain.dat", na.strings = "999")
names(dat) <- c("id", "txgrp", "male", "age", "edugroup", "workhrs", "exercise", "paingrps",
"pain", "anxiety", "stress", "control", "depress", "interfere", "disability",
paste0("dep", seq(1:7)), paste0("int", seq(1:6)), paste0("dis", seq(1:6)))
# missing data indicators
dat$mdep <- is.na(dat$depress)
dat$mind <- is.na(dat$interfere)
dat$mpain <- is.na(dat$pain)
# estimate model with semtools and lavaan
rescor.depress <- 'depress ~ interfere + pain'
fit.rescor.depress <- semTools::sem.auxiliary(rescor.depress, dat, aux = c("age","exercise","anxiety","stress","control","disability"))
fit.rescor.depress <- lavaan::sem.auxiliary(rescor.depress, dat, aux = c("age","exercise","anxiety","stress","control","disability"))
# estimate model with semtools and lavaan
rescor.depress <- 'depress ~ interfere + pain'
fit.rescor.depress <- semTools::sem.auxiliary(rescor.depress, dat, aux = c("age","exercise","anxiety","stress","control","disability"))
is.data.frame(dat)
fit.rescor.depress <- semTools::sem.auxiliary(rescor.depress, dat, fun = "sem",aux = c("age","exercise","anxiety","stress","control","disability"))
fit.rescor.depress <- semTools::sem.auxiliary(rescor.depress, dat,
aux = c("age","exercise","anxiety","stress","control","disability"), fun = "sem")
mu <- rep(4,20)
sigma <- matrix(.30, nrow = 3, ncol = 4)
diag(sigma) <- 1
sigma
mu <- rep(4,20)
sigma <- matrix(.30, nrow = 4, ncol = 4)
diag(sigma) <- 1
sigma
dat <- mvtnorm::rmvnorm(N, mu = mu, sigma = sigma)
N <- 100
dat <- mvtnorm::rmvnorm(N, mu = mu, sigma = sigma)
dat <- mvtnorm::rmvnorm(N, sigma = sigma)
mu <- rep(4,20)
sigma <- matrix(.30, nrow = 4, ncol = 4)
diag(sigma) <- 1
dat <- mvtnorm::rmvnorm(N, mu = mu, sigma = sigma)
dat <- mvtnorm::rmvnorm(N, mean = mu, sigma = sigma)
rep(4,20)
mu <- rep(20,4)
dat <- mvtnorm::rmvnorm(N, mean = mu, sigma = sigma)
# set working directory
fdir::set()
# read imputed data from working directory
dat <- read.table("pain.dat", na.strings = "999")
names(dat) <- c("id", "txgrp", "male", "age", "edugroup", "workhrs", "exercise", "paingrps",
"pain", "anxiety", "stress", "control", "depress", "interfere", "disability",
paste0("dep", seq(1:7)), paste0("int", seq(1:6)), paste0("dis", seq(1:6)))
# missing data indicators
dat$mdep <- is.na(dat$depress)
dat$mind <- is.na(dat$interfere)
dat$mpain <- is.na(dat$pain)
indicator.model <- '
age ~ mdep + mind + mpain
exercise ~ mdep + mind + mpain
anxiety ~ mdep + mind + mpain
stress ~ mdep + mind + mpain
control ~ mdep + mind + mpain
disability ~ mdep + mind + mpain
'
fit.indicator.model <- lavaan::sem(indicator.model, dat, fixed.x = T, missing = "fiml")
lavaan::standardizedSolution(fit.indicator.model, type = "std.nox")
depress.dv <- 'depress ~ interfere + pain'
interfere.dv <- 'interfere ~ pain + depress'
pain.dv <- 'pain ~ depress + interfere'
library(semTools)
auxvars <- c("age","exercise","anxiety","stress","control","disability")
rescor.depress <- semTools::sem.auxiliary(depress.dv, dat, fixed.x = F, missing = "fiml", aux = auxvars)
lavaan::summary(rescor.depress, rsquare = T, standardize = T)
rescor.depress <- semTools::sem.auxiliary(depress.dv, dat, fixed.x = F, missing = "fiml", aux = auxvars)
lavaan::summary(rescor.depress, rsquare = T, standardize = T)
rescor.interfere <- semTools::sem.auxiliary(interfere.dv, dat, fixed.x = F, missing = "fiml", aux = auxvars)
lavaan::summary(rescor.interfere, rsquare = T, standardize = T)
# estimate model with lavaan
rescor.pain <- semTools::sem.auxiliary(pain.dv, dat, fixed.x = F, missing = "fiml", aux = auxvars)
lavaan::summary(rescor.pain, rsquare = T, standardize = T)
library(fdir)
library(lavaan)
library(semTools)
set()
# read imputed data from working directory
dat <- read.table("pain.dat", na.strings = "999")
names(dat) <- c("id", "txgrp", "male", "age", "edugroup", "workhrs", "exercise", "paingrps",
"pain", "anxiety", "stress", "control", "depress", "interfere", "disability",
paste0("dep", seq(1:7)), paste0("int", seq(1:6)), paste0("dis", seq(1:6)))
dat$mdep <- is.na(dat$depress)
dat$mind <- is.na(dat$interfere)
dat$mpain <- is.na(dat$pain)
indicator.model <- '
age ~ mdep + mind + mpain
exercise ~ mdep + mind + mpain
anxiety ~ mdep + mind + mpain
stress ~ mdep + mind + mpain
control ~ mdep + mind + mpain
disability ~ mdep + mind + mpain
'
# estimate model in lavaan
# standardize auxiliary variables (outcomes) but not missing data indicators (predictors)
fit.indicator.model <- sem(indicator.model, dat, fixed.x = T, missing = "fiml")
standardizedSolution(fit.indicator.model, type = "std.nox")
depress.dv <- 'depress ~ interfere + pain'
interfere.dv <- 'interfere ~ pain + depress'
pain.dv <- 'pain ~ depress + interfere'
# potential auxiliary variables
auxvars <- c("age","exercise","anxiety","stress","control","disability")
# estimate model with lavaan
rescor.depress <- sem.auxiliary(depress.dv, dat, fixed.x = F, missing = "fiml", aux = auxvars)
summary(rescor.depress, rsquare = T, standardize = T)
rescor.interfere <- sem.auxiliary(interfere.dv, dat, fixed.x = F, missing = "fiml", aux = auxvars)
summary(rescor.interfere, rsquare = T, standardize = T)
# identify auxiliary variables with missing data indicators and residual correlations
# load packages
library(fdir)
library(lavaan)
library(semTools)
# set working directory and load data
set()
dat <- read.table("pain.dat", na.strings = "999")
names(dat) <- c("id", "txgrp", "male", "age", "edugroup", "workhrs", "exercise", "paingrps",
"pain", "anxiety", "stress", "control", "depress", "interfere", "disability",
paste0("dep", seq(1:7)), paste0("int", seq(1:6)), paste0("dis", seq(1:6)))
#################################################################
# IDENTIFY CORRELATES OF MISSINGNESS USING COHEN'S D EFFECT SIZE
#################################################################
# missing data indicators
dat$mis.depress <- is.na(dat$depress)
dat$mis.interf <- is.na(dat$interfere)
dat$mis.pain <- is.na(dat$pain)
# auxiliary variables regressed on missing data indicators
model.depress <- '
age ~ mis.depress
exercise ~ mis.depress
anxiety ~ mis.depress
stress ~ mis.depress
control ~ mis.depress
disability ~ mis.depress
'
model.interfere <- '
age ~ mis.interf
exercise ~ mis.interf
anxiety ~ mis.interf
stress ~ mis.interf
control ~ mis.interf
disability ~ mis.interf
'
model.pain <- '
age ~ mis.pain
exercise ~ mis.pain
anxiety ~ mis.pain
stress ~ mis.pain
control ~ mis.pain
disability ~ mis.pain
'
# estimate model in lavaan with standardized auxiliary variables (outcomes)
fit.depress <- sem(model.depress, dat, fixed.x = T, missing = "fiml")
standardizedSolution(fit.depress, type = "std.nox")
fit.interfere <- sem(model.interfere, dat, fixed.x = T, missing = "fiml")
standardizedSolution(fit.interfere, type = "std.nox")
fit.pain <- sem(model.pain, dat, fixed.x = T, missing = "fiml")
standardizedSolution(fit.pain, type = "std.nox")
