setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
dat <- read.table(paste0(getwd(),"/mathcomplete.dat"))
names(dat) <- c("id", "male", "lunchasst", "achievegrp", "stanread", "efficacy", "anxiety", "mathpre", "mathpost")
# data
Y <- dat$mathpost
mu <- mean(Y)
# evaluate first derivatives at current parameter values
deriv.1 <- function(mu, var){
d.mu <- var^-1 * sum(Y - mu)
d.var <- -N/2 * var^-1 + 1/2 * var^-2 * sum((Y - c(mu))^2)
return(c(d.mu, d.var))}
# evaluate second derivatives at current parameter values
deriv.2 <- function(mu, var){
d.mu <- -N * var^-1
d.var <- (N * .5 * var^-2) - var^-3 * sum((Y - c(mu))^2)
H <- matrix(c(d.mu,0,0,d.var), ncol = 2)
return(H)}
# plot ranges
# xrange <- c(50,150)
# yrange <- c(-940,-910)
xrange <- c(50,170)
yrange <- c(-940,-910)
# parameter values
xvalues <- seq(from = xrange[1], to = xrange[2], by = .05)
logL <- rep(0,length(xvalues))
for(v in 1:length(xvalues)){
logL[v] <- sum(dnorm(Y, mean(Y), sqrt(xvalues[v]), log = T))
}
# quadratic approximation @ 50
quad1 <- rep(0,length(xvalues))
v0 <- 50
for(v in 1:length(xvalues)){
quad1[v] <- sum(dnorm(Y, mu, sqrt(v0), log = T)) + (deriv.1(mu,v0)[2]*(xvalues[v]-v0)) + (.5*deriv.2(mu,v0)[2,2]*(xvalues[v]-v0)^2)
}
maxquad1 <- v0 -  deriv.1(mu,v0)[2] / deriv.2(mu,v0)[2,2]
# quadratic approximation @ maxquad1
quad2 <- rep(0,length(xvalues))
v0 <- maxquad1
for(v in 1:length(xvalues)){
quad2[v] <- sum(dnorm(Y, mu, sqrt(v0), log = T)) + (deriv.1(mu,v0)[2]*(xvalues[v]-v0)) + (.5*deriv.2(mu,v0)[2,2]*(xvalues[v]-v0)^2)
}
maxquad2 <- v0 -  deriv.1(mu,v0)[2] / deriv.2(mu,v0)[2,2]
# quadratic approximation @ maxquad3
quad3 <- rep(0,length(xvalues))
v0 <- maxquad2
for(v in 1:length(xvalues)){
quad3[v] <- sum(dnorm(Y, mu, sqrt(v0), log = T)) + (deriv.1(mu,v0)[2]*(xvalues[v]-v0)) + (.5*deriv.2(mu,v0)[2,2]*(xvalues[v]-v0)^2)
}
maxquad3 <- v0 -  deriv.1(mu,v0)[2] / deriv.2(mu,v0)[2,2]
# plot
CairoPDF(file = paste0(outputs, "Figure ", chapter, ".", figure, ".pdf"), family = "Palatia", width = 11, height = 8.5)
par(font.main = 3, cex.main = cexvalue0, cex.axis = cexvalue1, cex.lab = cexvalue1, mar = margins)
somedata <- rmvnorm(50, c(10,0), diag(2))
plot(somedata, main = title, xlim = range(xrange), ylim = range(yrange), xlab = NA, ylab = NA, axes = F, frame.plot = F, col = colornull)
lines(xvalues, logL, lty = linetype1)
lines(xvalues, quad1, lty = 2)
lines(xvalues, quad2, lty = 2)
lines(xvalues, quad3, lty = 2)
abline(v = maxquad1, col = color6b)
abline(v = maxquad2, col = color6b)
abline(v = maxquad3, col = color6b)
points(50,sum(dnorm(Y, mu, sqrt(50), log = T)), col = "black", pch = 19, cex = cexvalue0)
points(maxquad1,sum(dnorm(Y, mu, sqrt(maxquad1), log = T)), col = "black", pch = 19, cex = cexvalue0)
points(maxquad2,sum(dnorm(Y, mu, sqrt(maxquad2), log = T)), col = "black", pch = 19, cex = cexvalue0)
points(maxquad3,sum(dnorm(Y, mu, sqrt(maxquad3), log = T)), col = "black", pch = 19, cex = cexvalue0)
axis(side = 1, labels = T, at = c(50,70,90,110,130,150))
axis(side = 2, labels = T)
title(xlab = Xlab, ylab = Ylab, mgp = axislabelspacing)
dev.off()
###############################################################################
# figure 13: bivariate normal log-likelihood
###############################################################################
# labels
figure <- 13
text <- "Log-Likelihood with Respect to the Regression Coefficients"
if(figuretitles == 2){title <- paste0("Figure ", chapter, ".", figure, ": ", text)} else if(figuretitles == 1)
{title <- paste0("Figure ", chapter, ".", figure)} else {title <- ""}
Xlab <- "Population Intercept"
Ylab <- "Population Slope"
Zlab <- "Log-Likelihood"
# read data
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
dat <- read.table(paste0(getwd(),"/mathcomplete.dat"))
names(dat) <- c("id", "male", "lunchasst", "achievegrp", "stanread", "efficacy", "anxiety", "mathpre", "mathpost")
dat <- read.table(paste0(getwd(),"/smokingcomplete.dat"))
names(dat) <- c("id","smokeint","hvysmoker","age","parsmoke","female","race","income","pareduc")
# data
Y <- dat$smokeint
X <- cbind(1,dat$parsmoke)
Y <- dat$mathpost
X <- cbind(1,dat$efficacy)
Xs <- cbind(dat$parsmoke,dat$age-mean(dat$age),dat$income-mean(dat$income))
summary(lm(Y~Xs))
summary(lm(Y~X[,2]))
# B0 <-50.839
# B1 <- 1.785
# ressd <- sqrt(79.851)
B0 <- 9.0762
B1 <- 2.9468
ressd <- 4.374
# B0range <- c(40,62)
# B1range <- c(-1,4.5)
# zrange <- c(-921,-902)
B0range <- c(8,10)
B1range <- c(1.5,4.5)
zrange <- c(-5810,-5780)
min(z)
max(z)
# elevation data
sigmavaluesx <- seq(from = B0range[1], to = B0range[2], length = 90 + 1)
sigmavaluesy <- seq(from = B1range[1], to = B1range[2], length = 90 + 1)
z = matrix(zrange[1], ncol = length(sigmavaluesx), nrow = length(sigmavaluesy))
for(m in 1:length(sigmavaluesx)){
for(s in 1:length(sigmavaluesy)){
e <- Y -  X %*% c(sigmavaluesx[m],sigmavaluesy[s])
ll <- sum(dnorm(e, 0, ressd, log = T))
# z[m,s] <- ll
if(ll > zrange[1]){z[m,s] <- ll}
}
}
# plot
CairoPDF(file = paste0(outputs, "Figure ", chapter, ".", figure, ".pdf"), family = "Palatia", width = 11, height = 8.5)
par(font.main = 3, cex.main = cexvalue0, cex.axis = cexvalue1, cex.lab = cexvalue1, mar = margins)
contour(x = sigmavaluesx, y = sigmavaluesy, z, main = title, frame.plot = F)
points(B0, B1, col = "black", pch = 19, cex = cexvalue0)
axis(side = 1, labels = T)
axis(side = 2, labels = T)
title(xlab = Xlab, ylab = Ylab, mgp = axislabelspacing)
dev.off()
# par(font.main = 3, cex.main = cexvalue0, cex.axis = cexvalue_1, cex.lab = cexvalue0, mar = margins)
# persp(sigmavaluesy, sigmavaluesx, z,
#       col = "white", theta = 25, phi = 20, lwd = .25,
#       main = title, xlab = Xlab, ylab = Ylab, zlab = Zlab,
#       box = T, axes = TRUE, ticktype = "detailed", border = color0,
#       zlim = zrange, nticks = 5)
# par(font.main = 3, cex.main = cexvalue0, cex.axis = cexvalue_1, cex.lab = cexvalue0, mar = margins)
# persp(sigmavaluesy, sigmavaluesx, z,
#       col = "white", theta = 90, phi = 20, lwd = .25,
#       main = title, xlab = Ylab, ylab = Xlab, zlab = Zlab,
#       box = T, axes = TRUE, ticktype = "detailed", border = color0,
#       zlim = zrange, nticks = 5)
###############################################################################
# figure 14:
###############################################################################
# labels
figure <- 14
text <- "Bivariate Normal Distribution"
if(figuretitles == 2){title <- paste0("Figure ", chapter, ".", figure, ": ", text)} else if(figuretitles == 1)
{title <- paste0("Figure ", chapter, ".", figure)} else {title <- ""}
Xlab <- "Leader-Member Exchange (Relationship Quality)"
Ylab <- "Employee Empowerment"
Zlab <- "Relative Probability"
# read data
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
data <- read.table(paste0(getwd(),"/employeecomplete.dat"))
colnames(data) <- c("employee","team","turnoverint","male","empower","lmx","jobsat","climate","teamperf")
vars <- c("empower","lmx")
dat <- data[,c("empower","lmx")]
# population parameters
N <- nrow(dat)
mu <- colMeans(dat)
sigma <- cov(dat) * (N - 1) / N
cor(dat)
summary(dat)
# plot ranges
# Xrange <- c(mu[1] - 4 * sqrt(sigma[1,1]), mu[1] + 4 * sqrt(sigma[1,1]))
# Yrange <- c(mu[2] - 4 * sqrt(sigma[2,2]), mu[2] + 4 * sqrt(sigma[2,2]))
Xrange <- c(10,50)
Yrange <- c(-3,20)
Zrange <- c(0,.016)
# elevation data
sigmavaluesx <- seq(from = Xrange[1], to = Xrange[2], length = 90 + 1)
sigmavaluesy <- seq(from = Yrange[1], to = Yrange[2], length = 90 + 1)
z = matrix(Zrange[1], ncol = length(sigmavaluesx), nrow = length(sigmavaluesy))
for(m in 1:length(sigmavaluesx)){
for(s in 1:length(sigmavaluesy)){
Y <- c(sigmavaluesx[m], sigmavaluesy[s])
ll <- dmvnorm(Y, mu, sigma)
z[m,s] <- ll
# if(ll > Zrange[1]){z[m,s] <- ll}
}
}
CairoPDF(file = paste0(outputs, "Figure ", chapter, ".", figure, ".pdf"), family = "Palatia", width = 11, height = 8.5)
par(font.main = 3, cex.main = cexvalue1, cex.axis = cexvalue0, cex.lab = 1.25, mar = margins)
persp(sigmavaluesy, sigmavaluesx, z,
col = "white", theta = 25, phi = 20, lwd = .25,
main = title, xlab = Xlab, ylab = Ylab, zlab = Zlab,
box = T, axes = TRUE, ticktype = "detailed", border = color0,
# nticks = 5)
zlim = Zrange, nticks = 5)
dev.off()
# persp(sigmavaluesy, sigmavaluesx, z,
#       col = "white", theta = 25, phi = 20, lwd = .25,
#       main = title, xlab = Xlab, ylab = Ylab, zlab = Zlab,
#       box = T, axes = TRUE, ticktype = "detailed", border = color0,
#       # nticks = 5)
#       zlim = Zrange, nticks = 5)
###############################################################################
# figure 15:
###############################################################################
# labels
figure <- 15
text <- "Bivariate Normal Contour Plot"
if(figuretitles == 2){title <- paste0("Figure ", chapter, ".", figure, ": ", text)} else if(figuretitles == 1)
{title <- paste0("Figure ", chapter, ".", figure)} else {title <- ""}
Xlab <- "Leader-Member Exchange (Relationship Quality)"
Ylab <- "Employee Empowerment"
Zlab <- "Relative Probability"
# population parameters
N <- nrow(dat)
mu <- colMeans(dat)
sigma <- cov(dat) * (N - 1) / N
cor(dat)
summary(dat)
# plot ranges
# Xrange <- c(mu[1] - 4 * sqrt(sigma[1,1]), mu[1] + 4 * sqrt(sigma[1,1]))
# Yrange <- c(mu[2] - 4 * sqrt(sigma[2,2]), mu[2] + 4 * sqrt(sigma[2,2]))
Yrange <- c(10,50)
Xrange <- c(0,20)
Zrange <- c(0,.016)
# elevation data
sigmavaluesx <- seq(from = Xrange[1], to = Xrange[2], length = 90 + 1)
sigmavaluesy <- seq(from = Yrange[1], to = Yrange[2], length = 90 + 1)
z = matrix(Zrange[1], ncol = length(sigmavaluesx), nrow = length(sigmavaluesy))
for(m in 1:length(sigmavaluesx)){
for(s in 1:length(sigmavaluesy)){
Y <- c(sigmavaluesy[s],sigmavaluesx[m])
ll <- dmvnorm(Y, mu, sigma)
z[m,s] <- ll
# if(ll > Zrange[1]){z[m,s] <- ll}
}
}
x1 <- 13.18
y1 <- 32
x2 <- 9
y2 <- 33.25
l1 <- dmvnorm(c(y1,x1), mu, sigma)
l2 <- dmvnorm(c(y2,x2), mu, sigma)
CairoPDF(file = paste0(outputs, "Figure ", chapter, ".", figure, ".pdf"), family = "Palatia", width = 11, height = 8.5)
par(font.main = 3, cex.main = cexvalue0, cex.axis = cexvalue1, cex.lab = cexvalue1, mar = margins)
contour(x = sigmavaluesx, y = sigmavaluesy, z, main = title, frame.plot = F)
points(x1, y1, col = "black", pch = 18, cex = cexvalue2)
points(x2, y2, col = "black", pch = 19, cex = cexvalue0)
axis(side = 1, labels = T)
axis(side = 2, labels = T)
title(xlab = Xlab, ylab = Ylab, mgp = axislabelspacing)
dev.off()
all3vars <- cbind(data$jobsat, dat)
colMeans(all3vars)
cov(all3vars)
cor(all3vars)
sqrt(diag(cov(all3vars)))
###############################################################################
# figure 6: bar plot
###############################################################################
# labels
figure <- 16
text <- "Bar Graph of a Dichotomous Variable"
if(figuretitles == 2){title <- paste0("Figure ", chapter, ".", figure, ": ", text)} else if(figuretitles == 1)
{title <- paste0("Figure ", chapter, ".", figure)} else {title <- ""}
Xlab <- "Turnover Intention"
Ylab <- "Percent"
# plot ranges
yrange <- c(0,100)
# data w 30% 1's
somedata <- c(rep("0 = No Qutting Intentions",69),rep("1 = Intend to Quit",31))
counts <- table(somedata)
# barplot(counts)
# plot
CairoPDF(file = paste0(outputs, "Figure ", chapter, ".", figure, ".pdf"), family = "Palatia", width = 11, height = 8.5)
par(font.main = 3, cex.main = cexvalue0, cex.axis = cexvalue1, cex.lab = cexvalue1, mar = margins)
barplot(counts, main = title,ylim = range(yrange), col = color6a)
axis(side = 2, at = c(0,20,40,60,80,100))
title(xlab = Xlab, ylab = Ylab, mgp = axislabelspacing)
dev.off()
###############################################################################
# figure 17: Latent Variable Distribution
###############################################################################
# labels
figure <- 17
text <- "Latent Variable Distribution"
if(figuretitles == 2){title <- paste0("Figure ", chapter, ".", figure, ": ", text)} else if(figuretitles == 1)
{title <- paste0("Figure ", chapter, ".", figure)} else {title <- ""}
Xlab <- "Latent Response Variable"
Ylab <- "Relative Probability"
# plot ranges
xrange <- c(-4,4)
yrange <- c(0,1.20)
xvalues <- seq(from = xrange[1], to = xrange[2], by = .05)
# generate densities
prop <- .31
latentmean <- qnorm(prop, 0, 1)
lowlat <- dnorm(xvalues,latentmean,1)
lowlat <- lowlat / max(lowlat)
# Create coordinates for the area to shade
cord.x <- c(0,seq(0,4,0.05),4)
cord.y <- c(0,lowlat[xvalues >= 0],0)
# plot
somedata <- rmvnorm(50, c(10,0), diag(2))
CairoPDF(file = paste0(outputs, "Figure ", chapter, ".", figure, ".pdf"), family = "Palatia", width = 11, height = 8.5)
par(font.main = 3, cex.main = cexvalue0, cex.axis = cexvalue1, cex.lab = cexvalue1, mar = margins)
plot(somedata, main = title, xlim = range(xrange), ylim = range(yrange), xlab = NA, ylab = NA, axes = F, frame.plot = F, col = color0)
polygon(cord.x, cord.y, col = color6a, density = NA)
lines(xvalues, lowlat, lty = linetype1)
abline(v = 0, lty = linetype1, lwd = linesize1)
text(-2,1.10, labels = expression(italic("TURNOVER")~"="~0), cex = cexvalue1)
text(2,1.10, labels = expression(italic("TURNOVER")~"="~1), cex = cexvalue1)
axis(side = 1, at = c(-4,-3,-2,-1,0,1,2,3,4))
axis(side = 2, labels = F)
title(xlab = Xlab, ylab = Ylab, mgp = axislabelspacing)
dev.off()
###############################################################################
# figure 18: NEW Three Latent Normal Distributions
###############################################################################
# labels
figure <- 18
text <- "Latent Distributions at Three Values of a Predictor"
if(figuretitles == 2){title <- paste0("Figure ", chapter, ".", figure, ": ", text)} else if(figuretitles == 1)
{title <- paste0("Figure ", chapter, ".", figure)} else {title <- ""}
Xlab <- "Leader-Member Exchange (Relationship Quality)"
Ylab <- "Latent Turnover Intention"
# plot ranges
xrange <- c(0, 20)
yrange <- c(-6,6)
zrange <- c(0,.006)
# estimates
N <- 630
muX <- 9.6; varX <- 9
b0 <- .206; b1 <- -.075; resvar <- 1
muY <- b0 + b1 * muX; varY <- b1^2 * varX + resvar; covXY <- b1 * varX
mu <- c(muX,muY)
sigma <- matrix(c(varX,covXY,covXY,varY), ncol = 2, nrow = 2)
Xlow <- muX - 1.50*sqrt(varX)
Xmed <- muX - 0
Xhigh <- muX + 1.50*sqrt(varX)
# Xlow <- 5
# Xmed <- 10
# Xhigh <- 15
yhatXlow <- .206 - (.075 * Xlow)
yhatXmed <- .206 - (.075 * Xmed)
yhatXhigh <- .206 - (.075 * Xhigh)
# generate data
set.seed(90291)
X <- rnorm(N, muX, sqrt(varX))
Ystar <- b0 + b1*X + rnorm(N, 0, sqrt(resvar))
dat <- cbind(X,Ystar)
# separate y = 0 and 1
Y1 <- dat[Ystar > 0,]
Y0 <- dat[Ystar <= 0,]
zvalues <- seq(from = -6, to = 6, by= .05)
zvalueslow <- seq(from = yhatXlow - 3.5, to = yhatXlow + 3.5, by= .05)
zvaluesmed <- seq(from = yhatXmed - 3.5, to = yhatXmed + 3.5, by= .05)
zvalueshigh <- seq(from = yhatXhigh - 3.5, to = yhatXhigh + 3.5, by= .05)
denlow <- dnorm(zvalueslow, mean = yhatXlow)
denmed <- dnorm(zvaluesmed, mean = yhatXmed)
denhigh <- dnorm(zvalueshigh, mean = yhatXhigh)
maxden <- max(denlow,denmed,denhigh)
denlow <- denlow / maxden * 4 + Xlow
denmed <- denmed / maxden * 4 + Xmed
denhigh <- denhigh / maxden * 4 + Xhigh
# dashed lines
dash1 <- cbind(Xlow,zvalues)
dash2 <- cbind(Xmed,zvalues)
dash3 <- cbind(Xhigh,zvalues)
# select data
den2plotlow <- cbind(denlow,zvalueslow)
den2plotmed <- cbind(denmed,zvaluesmed)
den2plothigh <- cbind(denhigh,zvalueshigh)
# Create coordinates for the area to shade
cord.x <- c(-.80,seq(-.80,20,0.05),20)
cord.y <- rep(yrange[2], length(cord.x)); cord.y[1] <- 0; cord.y[length(cord.x)] <- 0
sigmavaluesx <- seq(from = xrange[1], to = xrange[2], length = 90 + 1)
sigmavaluesy <- seq(from = yrange[1], to = yrange[2], length = 90 + 1)
z = matrix(zrange[1], ncol = length(sigmavaluesx), nrow = length(sigmavaluesy))
for(m in 1:length(sigmavaluesx)){
for(s in 1:length(sigmavaluesy)){
Y <- c(sigmavaluesx[m],sigmavaluesy[s])
ll <- dmvnorm(Y,mu,sigma)
z[m,s] <- ll
# if(ll > zrange[1]){z[s,m] <- ll}
}
}
# plot
CairoPDF(file = paste0(outputs, "Figure ", chapter, ".", figure, ".pdf"), family = "Palatia", width = 11, height = 8.5)
par(font.main = 3, cex.main = cexvalue0, cex.axis = cexvalue1, cex.lab = cexvalue1, mar = margins)
# plot(Y0, main = title, xlim = range(xrange), ylim = range(yrange), xlab = NA, ylab = NA, axes = F, frame.plot = F, col = colornull, pch = 19, cex = cexvalue_2)
contour(x = sigmavaluesx, y = sigmavaluesy, z, main = title, frame.plot = F, drawlabels = F, nlevels = 10, col = color6a)
# points(Y0, col = colornull, pch = 3, cex = cexvalue_1)
lines(den2plotlow, col = color0, lwd = linesize1)
lines(den2plotmed, col = color0, lwd = linesize1)
lines(den2plothigh, col = color0, lwd = linesize1)
# abline(lm(Ystar~X), lty = linetype1, lwd = linesize1)
abline(b0, b1, lty = linetype1, lwd = linesize1)
polygon(cord.x, cord.y, col = color6a, density = NA)
lines(dash1, lty = 3)
lines(dash2, lty = 3)
lines(dash3, lty = 3)
points(Xlow, b0 + Xlow*b1, col = color0, pch = 16, cex = cexvalue0)
points(Xmed, b0 + Xmed*b1, col = color0, pch = 16, cex = cexvalue0)
points(Xhigh, b0 + Xhigh*b1, col = color0, pch = 16, cex = cexvalue0)
abline(h = 0, lty = linetype2, lwd = linesize1)
axis(side = 1)
axis(side = 2)
title(xlab = Xlab, ylab = Ylab, mgp = axislabelspacing)
dev.off()
###############################################################################
# analysis results
###############################################################################
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
data <- read.table(paste0(getwd(), "/paincomplete.dat"), sep = "")
colnames(data) <- c("id","male","age","educ","workhrs","exercise","severity","anxiety","stress","control","interf","depress","disability")
dat <- data[,c("age","workhrs","exercise","anxiety","stress","control","interf","depress","disability" )]
# population parameters
N <- nrow(dat)
mu <- colMeans(dat)
sigma.ml <- cov(dat) * (N - 1) / N
sigma.ols <- cov(dat)
cor(dat)
cov2cor(sigma.ols)
mu
sigma.ml
cov2cor(sigma.ols)
sqrt(diag(sigma.ml))
sigma.ols
cor(dat)
sqrt(diag(sigma.ols))
# ###############################################################################
# # figure 13: bivariate normal log-likelihood
# ###############################################################################
#
# # labels
# figure <- "XX"
# text <- "Log-Likelihood with Respect to the Regression Coefficients"
# if(figuretitles == 2){title <- paste0("Figure ", chapter, ".", figure, ": ", text)} else if(figuretitles == 1)
# {title <- paste0("Figure ", chapter, ".", figure)} else {title <- ""}
# Xlab <- "X"
# Ylab <- "Y"
# Zlab <- "Relative Probability"
#
# # read data
# setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# dat <- read.table(paste0(getwd(),"/mathcomplete.dat"))
# names(dat) <- c("id", "male", "lunchasst", "achievegrp", "stanread", "efficacy", "anxiety", "mathpre", "mathpost")
#
# # data
# Y <- dat$mathpost
# X <- cbind(1,dat$efficacy)
#
# summary(lm(Y~X[,2]))
# mean(X[,2])
# var(X[,2])
# mean(Y)
#
# xrange <- c(1,7)
# yrange <- c(1,7)
# zrange <- c(-921,-902)
#
# # elevation data
# sigmavaluesx <- seq(from = B0range[1], to = B0range[2], length = 90 + 1)
# sigmavaluesy <- seq(from = B1range[1], to = B1range[2], length = 90 + 1)
# z = matrix(zrange[1], ncol = length(sigmavaluesx), nrow = length(sigmavaluesy))
# for(m in 1:length(sigmavaluesx)){
#   for(s in 1:length(sigmavaluesy)){
#     e <- Y -  X %*% c(sigmavaluesx[m],sigmavaluesy[s])
#     ll <- sum(dnorm(e, 0, sqrt(79.851), log = T))
#     # z[m,s] <- ll
#     if(ll > zrange[1]){z[m,s] <- ll}
#   }
# }
#
# # plot
# # pdf(paste0(outputs, "Figure ", chapter, ".", figure, ".pdf"))
# # par(font.main = 3, cex.main = cexvalue0, cex.axis = cexvalue_1, cex.lab = cexvalue0, mar = margins)
# CairoPDF(file = paste0(outputs, "Figure ", chapter, ".", figure, ".pdf"), family = "Palatia", width = 11, height = 8.5)
# par(font.main = 3, cex.main = cexvalue0, cex.axis = cexvalue1, cex.lab = cexvalue1, mar = margins)
# # par(font.main = 3, cex.main = cexvalue0, cex.axis = cexvalue1, cex.lab = cexvalue1, mar = margins)
# contour(x = sigmavaluesx, y = sigmavaluesy, z, main = title, frame.plot = F)
# points(50.839, 1.785, col = "black", pch = 19, cex = cexvalue0)
# axis(side = 1, labels = T)
# axis(side = 2, labels = T)
# title(xlab = Xlab, ylab = Ylab, mgp = axislabelspacing)
# dev.off()
#
# # par(font.main = 3, cex.main = cexvalue0, cex.axis = cexvalue_1, cex.lab = cexvalue0, mar = margins)
# # persp(sigmavaluesy, sigmavaluesx, z,
# #       col = "white", theta = 25, phi = 20, lwd = .25,
# #       main = title, xlab = Xlab, ylab = Ylab, zlab = Zlab,
# #       box = T, axes = TRUE, ticktype = "detailed", border = color0,
# #       zlim = zrange, nticks = 5)
#
# # par(font.main = 3, cex.main = cexvalue0, cex.axis = cexvalue_1, cex.lab = cexvalue0, mar = margins)
# # persp(sigmavaluesy, sigmavaluesx, z,
# #       col = "white", theta = 90, phi = 20, lwd = .25,
# #       main = title, xlab = Ylab, ylab = Xlab, zlab = Zlab,
# #       box = T, axes = TRUE, ticktype = "detailed", border = color0,
# #       zlim = zrange, nticks = 5)
# load libraries
library(lavaan)
# set working directory to the location of this script
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# read data from working directory
dat <- read.table(paste0(getwd(),"/paincomplete.dat"))
names(dat) <- c("employee","team","turnover","male","empower","lmx","worksat","climate","cohesion")
# specify model
model <- '
worksat ~~ worksat
empower ~~ empower
lmx ~~ lmx
'
# estimate model in lavaan
fit <- sem(model, dat, meanstructure = TRUE, fixed.x = FALSE)
summary(fit, standardize = TRUE)
