# example 2.13: logistic and probit regression
# requires fdir and mdmb packages
# set working directory
fdir::set()
# read data from working directory
dat <- read.table("employee.dat", na.strings = "999")
names(dat) <- c("employee","team","turnover","male","empower","lmx","worksat","climate","cohesion")
# summarize incomplete variables to determine ranges for pseudo-imputations
summary(dat[,c("turnover","lmx","empower","male")])
# model for empower predictor (empower | male)
model.empower <- list( "model"="linreg", "formula" = empower ~ male, nodes = nodes.empower)
# model for lmx predictor (lmx | empower male)
model.lmx <- list( "model"="linreg", "formula" = lmx ~ empower + male, nodes = nodes.lmx)
# model for turnover outcome (turnover | lmx empower male)
model.turnover <- list( "model"="logistic", "formula" = turnover ~ lmx + empower + male, nodes = nodes.turnover)
# combine predictor models into a list
predictor.models <- list(empower = model.empower, lmx = model.lmx)
# estimate factored regression model w mdmb
fit <- mdmb::frm_em(dat = dat, dep = model.turnover, ind = predictor.models)
summary(fit)
# set ranges (nodes) for pseudo-imputations
nodes.empower <- seq(0, 50, by = 1)
nodes.lmx <- seq(-5, 32, by = 1)
nodes.turnover <- c(0,1)
# model for empower predictor (empower | male)
model.empower <- list( "model"="linreg", "formula" = empower ~ male, nodes = nodes.empower)
# model for lmx predictor (lmx | empower male)
model.lmx <- list( "model"="linreg", "formula" = lmx ~ empower + male, nodes = nodes.lmx)
# model for turnover outcome (turnover | lmx empower male)
model.turnover <- list( "model"="logistic", "formula" = turnover ~ lmx + empower + male, nodes = nodes.turnover)
# combine predictor models into a list
predictor.models <- list(empower = model.empower, lmx = model.lmx)
fit <- mdmb::frm_em(dat = dat, dep = model.turnover, ind = predictor.models)
summary(fit)
# model for turnover outcome (turnover | lmx empower male)
model.turnover <- list( "model"="oprobit", "formula" = turnover ~ lmx + empower + male, nodes = nodes.turnover)
fit.probit <- mdmb::frm_em(dat = dat, dep = model.turnover, ind = predictor.models)
summary(fit.probit)
# example 3.11: logistic and probit regression with factored specification for incomplete predictors
# requires fdir and mdmb packages
# set working directory
fdir::set()
# read data from working directory
dat <- read.table("employee.dat", na.strings = "999")
names(dat) <- c("employee","team","turnover","male","empower","lmx","worksat","climate","cohesion")
# summarize incomplete variables to determine ranges for pseudo-imputations
summary(dat[,c("turnover","lmx","empower","male")])
# set ranges (nodes) for pseudo-imputations
nodes.empower <- seq(0, 50, by = 1)
nodes.lmx <- seq(-5, 32, by = 1)
nodes.turnover <- c(0,1)
# model for empower predictor (empower | male)
model.empower <- list( "model"="linreg", "formula" = empower ~ male, nodes = nodes.empower)
# model for lmx predictor (lmx | empower male)
model.lmx <- list( "model"="linreg", "formula" = lmx ~ empower + male, nodes = nodes.lmx)
# model for turnover outcome (turnover | lmx empower male)
logistic.model.turnover <- list( "model"="logistic", "formula" = turnover ~ lmx + empower + male, nodes = nodes.turnover)
# combine predictor models into a list
predictor.models <- list(empower = model.empower, lmx = model.lmx)
# estimate factored regression model w mdmb
fit.logistic <- mdmb::frm_em(dat = dat, dep = logistic.model.turnover, ind = predictor.models)
summary(fit.logistic)
# probit model for turnover outcome (turnover | lmx empower male)
probit.model.turnover <- list( "model"="oprobit", "formula" = turnover ~ lmx + empower + male, nodes = nodes.turnover)
# estimate factored regression model w mdmb
fit.probit <- mdmb::frm_em(dat = dat, dep = probit.model.turnover, ind = predictor.models)
summary(fit.probit)
# logistic regression model with wald test
logitreg <- glm(turnover ~ lmx + empower + male, data = dat, family = "binomial")
summary(logitreg)
aod::wald.test(b = coef(logitreg), Sigma = vcov(logitreg), Terms = 2:4)
# probit regression model with wald test
probitreg <- glm(turnover ~ lmx + empower + male, data = dat, family = "binomial"(link = "probit"))
summary(probitreg)
aod::wald.test(b = coef(probitreg), Sigma = vcov(probitreg), Terms = 2:4)
aod::wald.test(b = coef(fit.logistic), Sigma = vcov(fit.logistic), Terms = 2:4)
# example 5.4: bayes regression with factored (sequential) specification for incomplete predictors
# requires fdir and mdmb packages
# set working directory
fdir::set()
# read data from working directory
dat <- read.table("employee.dat", na.strings = "999")
names(dat) <- c("employee","team","turnover","male","empower","lmx","worksat","climate","cohesion")
# summarize incomplete variables to determine ranges for pseudo-imputations
summary(dat[,c("empower","lmx","climate","male")])
# example 5.4: bayes regression with factored (sequential) specification for incomplete predictors
# requires fdir and mdmb packages
# set working directory
fdir::set()
# read data from working directory
dat <- read.table("employee.dat", na.strings = "999")
names(dat) <- c("employee","team","turnover","male","empower","lmx","worksat","climate","cohesion")
# summarize incomplete variables to determine ranges for pseudo-imputations
summary(dat[,c("empower","lmx","climate","male")])
# set ranges (nodes) for pseudo-imputations
nodes.lmx <- seq(-5, 25, by = 1)
nodes.climate <- seq(5, 40, by = 1)
nodes.empower <- seq(5, 50, by = 1)
# model for climate predictor (climate |male)
model.climate <- list( "model"="linreg", "formula" = climate ~ male, nodes = nodes.climate)
# model for lmx predictor (lmx | climate male)
model.lmx <- list( "model"="linreg", "formula" = lmx ~ climate + male, nodes = nodes.lmx)
# model for empower outcome (empower | male)
model.empower <- list( "model"="linreg", "formula" = empower ~ lmx + climate + male, nodes = nodes.empower)
# combine predictor models into a list
predictor.models <- list(climate = model.climate, lmx = model.lmx)
# estimate factored regression model w mdmb
fit <- mdmb::frm_fb(dat = dat, dep = model.empower, ind = predictor.models)
summary(fit)
# example 3.8: moderated regression with factored specification for incomplete predictors
# requires fdir, lavaan, and mdmb packages
# set working directory
fdir::set()
# read data from working directory
dat <- read.table("pain.dat", na.strings = "999")
names(dat) <- c("id", "txgrp", "male", "age", "edugroup", "workhrs", "exercise", "paingrps",
"pain", "anxiety", "stress", "control", "depress", "interfere", "disability",
paste0("dep", seq(1:7)), paste0("int", seq(1:6)), paste0("dis", seq(1:6)))
# specify lavaan model for sample statistics
model <- '
disability ~~ depress
disability ~~ male
disability ~~ pain
depress ~~ male
depress ~~ pain
male ~~ pain
'
# estimate sample statistics in lavaan
lavaan::inspectSampleCov(model, dat, meanstructure = TRUE, missing = "fiml")
# summarize incomplete predictors to determine ranges for pseudo-imputations
summary(dat[,c("disability","depress","male","pain")])
# set ranges (nodes) for pseudo-imputations
nodes.pain <- c(0,1)
nodes.depress <- seq(0, 35, by = 1)
nodes.disability <- seq(0, 47, by = 1)
# model for pain predictor (pain | male)
model.pain <- list( "model"="logistic", "formula" = pain ~ male, nodes = nodes.pain)
# model for depression predictor (depress | pain male)
model.depress <- list( "model"="linreg", "formula" = depress ~ pain + male, nodes = nodes.depress)
# model for disability outcome (disability | depress male depress*male pain)
# depression mean = 14.718
model.disability <- list("model" = "linreg", "formula" = disability ~ I(depress - 14.718) + male + I((depress - 14.718)*male) + pain, nodes = nodes.disability)
# combine predictor models into a list
predictor.models <- list(pain = model.pain, depress = model.depress)
# estimate factored regression model w mdmb
fit <- mdmb::frm_fb(dat = dat, dep = model.disability, ind = predictor.models)
summary(fit)
# example 3.8: moderated regression with factored specification for incomplete predictors
# requires fdir, lavaan, and mdmb packages
# set working directory
fdir::set()
# read data from working directory
dat <- read.table("pain.dat", na.strings = "999")
names(dat) <- c("id", "txgrp", "male", "age", "edugroup", "workhrs", "exercise", "paingrps",
"pain", "anxiety", "stress", "control", "depress", "interfere", "disability",
paste0("dep", seq(1:7)), paste0("int", seq(1:6)), paste0("dis", seq(1:6)))
# specify lavaan model for sample statistics
model <- '
disability ~~ depress
disability ~~ male
disability ~~ pain
depress ~~ male
depress ~~ pain
male ~~ pain
'
# estimate sample statistics in lavaan
lavaan::inspectSampleCov(model, dat, meanstructure = TRUE, missing = "fiml")
# example 3.8: moderated regression with factored specification for incomplete predictors
# requires fdir, lavaan, and mdmb packages
# set working directory
fdir::set()
# read data from working directory
dat <- read.table("math.dat", na.strings = "999")
names(dat) <- c("id", "male", "frlunch", "achievegrp", "stanread", "efficacy", "anxiety", "mathpre", "mathpost")
# specify lavaan model for sample statistics
model <- '
mathpost ~~ anxiety
mathpost ~~ frlunch
mathpost ~~ mathpre
mathpost ~~ male
anxiety ~~ frlunch
anxiety ~~ mathpre
anxiety ~~ male
frlunch ~~ mathpre
frlunch ~~ male
mathpre ~~ male
'
# estimate sample statistics in lavaan
lavaan::inspectSampleCov(model, dat, meanstructure = TRUE, missing = "fiml")
# summarize incomplete predictors to determine ranges for pseudo-imputations
summary(dat[,c("mathpost","anxiety","frlunch","mathpre","male")])
# set ranges (nodes) for pseudo-imputations
nodes.frlunch <- c(0,1)
nodes.anxiety <- seq(-10, 65, by = 1)
nodes.mathpost <- seq(25, 95, by = 1)
# model for frlunch predictor (frlunch | mathpre male)
model.frlunch <- list("model"="logistic", "formula" = frlunch ~ mathpre + male, nodes.frlunch)
# model for anxiety predictor (anxiety | frlunch mathpre male)
model.anxiety <- list( "model"="linreg", "formula" = anxiety ~ frlunch + mathpre + male, nodes = nodes.anxiety)
# model for mathpost outcome (mathpost | anxiety anxiety^2 frlunch mathpre male
# anxiety mean = 18.058
model.mathpost <- list("model" = "linreg", "formula" = mathpost ~ I(anxiety - 18.058) + I((anxiety - 18.058)^2) + frlunch + mathpre + male, nodes = nodes.mathpost)
# combine predictor models into a list
predictor.models <- list(frlunch = model.frlunch, anxiety = model.anxiety)
# estimate factored regression model w mdmb
fit <- mdmb::frm_fb(dat = dat, dep = model.mathpost, ind = predictor.models)
summary(fit)
# example 3.10: regression with auxiliary variables
# requires fdir, lavaan, and mdmb packages
# set working directory
fdir::set()
# read data from working directory
dat <- read.table("drugtrial.dat", na.strings = "999")
names(dat) <- c("id","male","drug","severity0","severity1","severity3","severity6","dropgrp","dropout","sdrop3","sdrop6")
# specify lavaan model for sample statistics
model <- 'severity0 ~~ severity1
severity0 ~~ severity3
severity0 ~~ severity6
severity0 ~~ drug
severity0 ~~ male
severity1 ~~ severity3
severity1 ~~ severity6
severity1 ~~ drug
severity1 ~~ male
severity3 ~~ severity6
severity3 ~~ drug
severity3 ~~ male
drug ~~ male'
# estimate sample statistics in lavaan
lavaan::inspectSampleCov(model, dat, meanstructure = TRUE, missing = "fiml")
# set ranges (nodes) for pseudo-imputations
nodes.severity0 <- seq(1, 7, by = .25)
nodes.severity6 <- seq(1, 7, by = .25)
nodes.severity3 <- seq(1, 7, by = .25)
nodes.severity1 <- seq(1, 7, by = .25)
# model for severity0 predictor (severity1 | drug male)
model.severity0 <- list( "model"="linreg", "formula" = severity0 ~ drug + male, nodes = nodes.severity0)
# model for severity6 outcome (severity6 | severity0 drug male)
# severity0 mean = 5.367
# male mean = .474
model.severity6 <- list("model" = "linreg", "formula" = severity6 ~ drug + I(severity0 - 5.367) + I(male - .474), nodes = nodes.severity6)
# model for severity3 auxiliary variable (severity3 | severity6 severity0 drug male)
model.severity3 <- list( "model"="linreg", "formula" = severity3 ~ severity6 + drug + severity0 + male, nodes = nodes.severity3)
# model for severity1 auxiliary variable (severity1 | severity3 severity6 severity0 drug male)
model.severity1 <- list( "model"="linreg", "formula" = severity1 ~ severity3 + severity6 + drug + severity0 + male, nodes = nodes.severity1)
# combine predictor models into a list (focal model functions as a predictor model)
predictor.models <- list(severity0 = model.severity0, severity6 = model.severity6, severity3 = model.severity3)
# estimate factored regression model w mdmb
fit <- mdmb::frm_fb(dat = dat, dep = model.severity1, ind = predictor.models)
summary(fit)
