# muLW <- c(22.93, 13.79)
# sigmaLW <- matrix(c(18.02, -7.35, -7.35, 35), ncol = 2)
# muML <- c(20, 15)
# sigmaML <- matrix(c(27, -11, -11, 38), ncol = 2)
# b1 <- sigmaLW[2,1] / sigmaLW[1,1]
# b0 <- muLW[2] - b1*muLW[1]
#
# set.seed(90291)
# N <- 275
# datML <- rmvnorm(N, muML, sigmaML)
# datML[datML[,2] < 1, 2] <- 1
# b0miss <- 3.86 # 50%
# # b0miss <- 2.905 # 25%
# b1miss <- -.193
# rstar <- b0miss + b1miss*datML[,1] + rnorm(N, 0, 1)
# missind <- rep(0, nrow(datML))
# missind[rstar > 0] <- 1
#
# datCOM <- datML[missind == 0,]
# datMIS <- datML[missind == 1,]
#
# # elevation data
# sigmavaluesx <- seq(from = xrange[1], to = xrange[2], length = 90 + 1)
# sigmavaluesy <- seq(from = yrange[1], to = yrange[2], length = 90 + 1)
# z = matrix(zrange[1], ncol = length(sigmavaluesx), nrow = length(sigmavaluesy))
# for(m in 1:length(sigmavaluesx)){
#   for(s in 1:length(sigmavaluesy)){
#     Y <- c(sigmavaluesx[m],sigmavaluesy[s])
#     ll <- dmvnorm(Y,muML,sigmaML)
#     z[m,s] <- ll
#     # if(ll > zrange[1]){z[s,m] <- ll}
#   }
# }
#
# # plot
# # pdf(paste0(outputs, "Figure ", chapter, ".", figure, ".pdf"))
# # par(font.main = 3, cex.main = cexvalue0, cex.axis = cexvalue_1, cex.lab = cexvalue0, mar = margins)
# CairoPDF(file = paste0(outputs, "Figure ", chapter, ".", figure, ".pdf"), family = "Palatia", width = 11, height = 8.5)
# par(font.main = 3, cex.main = cexvalue0, cex.axis = cexvalue1, cex.lab = cexvalue1, mar = margins)
# # somedata <- matrix(rnorm(20), ncol = 2)
# contour(x = sigmavaluesx, y = sigmavaluesy, z, main = title, frame.plot = F, drawlabels = F, nlevels = 10, col = color6a)
# # plot(somedata, main = title, xlim = range(xrange), ylim = range(yrange), xlab = NA, ylab = NA, axes = F, frame.plot = F, col = colornull)
# points(datCOM, pch = 21, col = color13b, cex = cexvalue_1)
# points(datMIS, pch = 3, col = color0, cex = cexvalue_1)
# # abline(v = muML[1], h = muML[2], col = color0, lty = linetype2)
# axis(side = 1, labels = T)
# axis(side = 2, labels = T)
# title(xlab = Xlab, ylab = Ylab, mgp = axislabelspacing)
# dev.off()
###############################################################################
# figure 2: lw contour
###############################################################################
# labels
figure <- 2
text <- "Bivariate Normal Contour Plot of the Complete Cases"
if(figuretitles == 2){title <- paste0("Figure ", chapter, ".", figure, ": ", text)} else if(figuretitles == 1)
{title <- paste0("Figure ", chapter, ".", figure)} else {title <- ""}
Xlab <- "Leader-Member Exchange"
Ylab <- "Empowerment"
# inherent all from previous example
# plot
CairoPDF(file = paste0(outputs, "Figure ", chapter, ".", figure, ".pdf"), family = "Palatia", width = 11, height = 8.5)
par(font.main = 3, cex.main = cexvalue0, cex.axis = cexvalue1, cex.lab = cexvalue1, mar = margins)
contour(x = sigmavaluesx, y = sigmavaluesy, z, main = title, frame.plot = F, drawlabels = F, nlevels = 10, col = color6a)
points(datCOM, pch = 21, col = color11b, cex = cexvalue_1)
points(mean(datCOM[,1]), mean(datCOM[,2]), pch = 20, cex = cexvalue1)
axis(side = 1, labels = T)
axis(side = 2, labels = T)
title(xlab = Xlab, ylab = Ylab, mgp = axislabelspacing)
dev.off()
# # labels
# figure <- 2
# text <- "Bivariate Normal Contour Plot of the Complete Cases"
# if(figuretitles == 2){title <- paste0("Figure ", chapter, ".", figure, ": ", text)} else if(figuretitles == 1)
# {title <- paste0("Figure ", chapter, ".", figure)} else {title <- ""}
# Xlab <- "Perceived Control Over Pain"
# Ylab <- "Depression"
# Zlab <- "Relative Probability"
#
# yrange <- c(0,35)
# xrange <- c(0,40)
# zrange <- c(0,.006)
#
# # parameters
# muLW <- c(22.93, 13.79)
# sigmaLW <- matrix(c(18.02, -7.35, -7.35, 35), ncol = 2)
# muML <- c(20, 15)
# sigmaML <- matrix(c(27, -11, -11, 38), ncol = 2)
# b1 <- sigmaLW[2,1] / sigmaLW[1,1]
# b0 <- muLW[2] - b1*muLW[1]
#
# set.seed(90291)
# N <- 275
# datML <- rmvnorm(N, muML, sigmaML)
# datML[datML[,2] < 1, 2] <- 1
# b0miss <- 3.86 # 50%
# # b0miss <- 2.905 # 25%
# b1miss <- -.193
# rstar <- b0miss + b1miss*datML[,1] + rnorm(N, 0, 1)
# missind <- rep(0, nrow(datML))
# missind[rstar > 0] <- 1
#
# datCOM <- datML[missind == 0,]
# datMIS <- datML[missind == 1,]
#
# # elevation data
# sigmavaluesx <- seq(from = xrange[1], to = xrange[2], length = 90 + 1)
# sigmavaluesy <- seq(from = yrange[1], to = yrange[2], length = 90 + 1)
# z = matrix(zrange[1], ncol = length(sigmavaluesx), nrow = length(sigmavaluesy))
# for(m in 1:length(sigmavaluesx)){
#   for(s in 1:length(sigmavaluesy)){
#     Y <- c(sigmavaluesx[m],sigmavaluesy[s])
#     ll <- dmvnorm(Y,muML,sigmaML)
#     z[m,s] <- ll
#     # if(ll > zrange[1]){z[s,m] <- ll}
#   }
# }
#
# # plot
# # pdf(paste0(outputs, "Figure ", chapter, ".", figure, ".pdf"))
# # par(font.main = 3, cex.main = cexvalue0, cex.axis = cexvalue_1, cex.lab = cexvalue0, mar = margins)
# CairoPDF(file = paste0(outputs, "Figure ", chapter, ".", figure, ".pdf"), family = "Palatia", width = 11, height = 8.5)
# par(font.main = 3, cex.main = cexvalue0, cex.axis = cexvalue1, cex.lab = cexvalue1, mar = margins)
# contour(x = sigmavaluesx, y = sigmavaluesy, z, main = title, frame.plot = F, drawlabels = F, nlevels = 10, col = color6a)
# points(datCOM, pch = 21, col = color11b, cex = cexvalue_1)
# points(muLW[1], muLW[2], pch = 20, cex = cexvalue1)
# axis(side = 1, labels = T)
# axis(side = 2, labels = T)
# title(xlab = Xlab, ylab = Ylab, mgp = axislabelspacing)
# dev.off()
###############################################################################
# figure 3: ml contour
###############################################################################
# labels
figure <- 3
text <- "Bivariate Normal Contour Plot of the Observed Data"
if(figuretitles == 2){title <- paste0("Figure ", chapter, ".", figure, ": ", text)} else if(figuretitles == 1)
{title <- paste0("Figure ", chapter, ".", figure)} else {title <- ""}
Xlab <- "Perceived Control Over Pain"
Xlab <- "Leader-Member Exchange"
Ylab <- "Empowerment"
# inherit all from figure 1
jittdatMIS <- cbind(0,datMIS[,2])
# plot
CairoPDF(file = paste0(outputs, "Figure ", chapter, ".", figure, ".pdf"), family = "Palatia", width = 11, height = 8.5)
par(font.main = 3, cex.main = cexvalue0, cex.axis = cexvalue1, cex.lab = cexvalue1, mar = margins)
contour(x = sigmavaluesx, y = sigmavaluesy, z, main = title, frame.plot = F, drawlabels = F, nlevels = 10, col = color6a)
abline(h = mu[2], lty = 2)
points(datCOM, pch = 21, col = color11b, cex = cexvalue_1)
points(jitter(jittdatMIS[,1],25), jittdatMIS[,2], pch = 3, col = color0, cex = cexvalue_1)
abline(b0,b1)
points(mu[1], mu[2], col = "black", pch = 19, cex = cexvalue0)
axis(side = 1, labels = T)
axis(side = 2, labels = T)
title(xlab = Xlab, ylab = Ylab, mgp = axislabelspacing)
dev.off()
datMIS999 <- datMIS
datMIS999[,1] <- 999
datOUT <- rbind(datCOM,datMIS999)
write.table(datOUT, paste0(programs, "/LMXdataCh3bivar.dat"), row.names = F, col.names = F)
# # labels
# figure <- 3
# text <- "Bivariate Normal Contour Plot of the Observed Data"
# if(figuretitles == 2){title <- paste0("Figure ", chapter, ".", figure, ": ", text)} else if(figuretitles == 1)
# {title <- paste0("Figure ", chapter, ".", figure)} else {title <- ""}
# Xlab <- "Perceived Control Over Pain"
# Ylab <- "Depression"
# Zlab <- "Relative Probability"
#
# # parameters
# muLW <- c(22.93, 13.79)
# sigmaLW <- matrix(c(18.02, -7.35, -7.35, 35.91), ncol = 2)
# muML <- c(20, 15)
# sigmaML <- matrix(c(26.67, -10.88, -10.88, 37.71), ncol = 2)
# zrange <- c(0,.005)
# b1 <- sigmaLW[2,1] / sigmaLW[1,1]
# b0 <- muLW[2] - b1*muLW[1]
#
# # generate data
# set.seed(90291)
# N <- 275
# datML <- rmvnorm(N, muML, sigmaML)
# datML[datML[,2] < 1, 2] <- 1
# b0miss <- 3.86
# b1miss <- -.193
# rstar <- b0miss + b1miss*datML[,1] + rnorm(N, 0, 1)
# missind <- rep(0, nrow(datML))
# missind[rstar > 0] <- 1
# datCOM <- datML[missind == 0,]
# datMIS <- datML[missind == 1,]
# datMIS[,2] <- 0
#
# # write data for analysis in obs. vs. expected info section
# data <- datML
# data[missind == 1, 2] <- 999
# write.table(data, file = "~/desktop/obsinfo.dat", row.names = F, col.names = F)
#
# # plot ranges
# Yrange <- c(0,35)
# Xrange <- c(0,40)
#
# # elevation data
# sigmavaluesx <- seq(from = Xrange[1], to = Xrange[2], length = 90 + 1)
# sigmavaluesy <- seq(from = Yrange[1], to = Yrange[2], length = 90 + 1)
# z = matrix(zrange[1], ncol = length(sigmavaluesx), nrow = length(sigmavaluesy))
# for(m in 1:length(sigmavaluesx)){
#   for(s in 1:length(sigmavaluesy)){
#     Y <- c(sigmavaluesx[m],sigmavaluesy[s])
#     ll <- dmvnorm(Y,muML,sigmaML)
#     z[m,s] <- ll
#     # if(ll > zrange[1]){z[s,m] <- ll}
#   }
# }
#
# # plot
# # pdf(paste0(outputs, "Figure ", chapter, ".", figure, ".pdf"))
# # par(font.main = 3, cex.main = cexvalue0, cex.axis = cexvalue_1, cex.lab = cexvalue0, mar = margins)
# CairoPDF(file = paste0(outputs, "Figure ", chapter, ".", figure, ".pdf"), family = "Palatia", width = 11, height = 8.5)
# par(font.main = 3, cex.main = cexvalue0, cex.axis = cexvalue1, cex.lab = cexvalue1, mar = margins)
# contour(x = sigmavaluesx, y = sigmavaluesy, z, main = title, frame.plot = F, drawlabels = F, nlevels = 10, col = color6a)
# points(datCOM, pch = 21, col = color11b, cex = cexvalue_1)
# points(jitter(datMIS[,2],40) ~ datMIS[,1], pch = 3, col = color0, cex = cexvalue_1)
# abline(b0,b1)
# # abline(v = muML[1], h = muML[2], col = color0, lty = linetype2)
# points(muML[1], muML[2], col = "black", pch = 19, cex = cexvalue0)
# axis(side = 1, labels = T)
# axis(side = 2, labels = T)
# title(xlab = Xlab, ylab = Ylab, mgp = axislabelspacing)
# dev.off()
# labels
figure <- 6
text <- "Depression Slopes for Males and Females"
if(figuretitles == 2){title <- paste0("Figure ", chapter, ".", figure, ": ", text)} else if(figuretitles == 1)
{title <- paste0("Figure ", chapter, ".", figure)} else {title <- ""}
Xlab <- "Depression (Centered)"
Ylab <- "Psychosocial Disability"
# plot ranges
xrange <- c(-20,20)
yrange <- c(0,40)
# simple slopes
xvalues <- seq(from = xrange[1], to = xrange[2], by = .10)
b0 <- 16.9722; b2 <- -0.3488; b1 <- 0.4198; b3 <- -0.2144; varYe <- 3.8066^2
# g0 <- 14.772; g1 <- 1.002; varXr <- 38.559
m1 <- 0; m2 <- 1; y <- 12
# plot
CairoPDF(file = paste0(outputs, "Figure ", chapter, ".", figure, ".pdf"), family = "Palatia", width = 11, height = 8.5)
par(font.main = 3, cex.main = cexvalue0, cex.axis = cexvalue1, cex.lab = cexvalue1, mar = margins)
somedata <- rmvnorm(50, c(10,0), diag(2))
plot(somedata, main = title, xlim = range(xrange), ylim = range(yrange), xlab = NA, ylab = NA, axes = F, frame.plot = F, col = colornull)
abline(b0+b2*m1, b1+b3*m1, lty = linetype1, lwd = linesize1)
abline(b0+b2*m2, b1+b3*m2, lty = linetype2, lwd = linesize1)
axis(side = 1)
axis(side = 2)
title(xlab = Xlab, ylab = Ylab, mgp = axislabelspacing)
legend(5,10, legend=c("Female", "Male"), box.lty = 0, lty=linetype1:linetype2, cex = cexvalue1)
dev.off()
###############################################################################
# figure 7: polynomial regression line
###############################################################################
# labels
figure <- 7
text <- "Regression line from the Curvilinear Regression Analysis"
if(figuretitles == 2){title <- paste0("Figure ", chapter, ".", figure, ": ", text)} else if(figuretitles == 1)
{title <- paste0("Figure ", chapter, ".", figure)} else {title <- ""}
Xlab <- "Math Anxiety (Centered)"
Ylab <- "Post-Test Math Achievement"
# plot ranges
xrange <- c(0,40) - 20
yrange <- c(30,75)
# parameter values
xvalues <- seq(from = xrange[1], to = xrange[2], by = .10)
b0 <- 60.0475; b1 <- -4.8735; b2 <- -0.4058; b3 <- -0.0153; varYe <- 7.9994^2
m1 <- 0; m2 <- 1;
yhats <- b0 + b1*m1 + b2*xvalues + b3*xvalues^2
# plot
CairoPDF(file = paste0(outputs, "Figure ", chapter, ".", figure, ".pdf"), family = "Palatia", width = 11, height = 8.5)
par(font.main = 3, cex.main = cexvalue0, cex.axis = cexvalue1, cex.lab = cexvalue1, mar = margins)
plot(xvalues, yhats, type ="l", main = title, xlim = range(xrange), ylim = range(yrange), xlab = NA, ylab = NA, axes = F, frame.plot = F, col = "black")
axis(side = 1, at = c(-20,-10,0,10,20))
axis(side = 2)
title(xlab = Xlab, ylab = Ylab, mgp = axislabelspacing)
dev.off()
model <- '
frlunch ~~ frlunch
mathpre ~~ mathpre
mathpost ~~ mathpost
anxiety ~~ anxiety
male ~~ male
'
fit <- sem(model, dat, meanstructure = TRUE, fixed.x = FALSE)
summary(fit, standardize = TRUE)
library(lavaan)
library(mdmb)
# read data
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
dat <- read.table(paste0(getwd(), "/math.dat"), na.strings = "999")
names(dat) <- c("id", "male", "frlunch", "achievegrp", "stanread", "efficacy", "anxiety", "mathpre", "mathpost")
fit <- sem(model, dat, meanstructure = TRUE, fixed.x = FALSE)
summary(fit, standardize = TRUE)
# model for y
mod.y <- list("model" = "linreg", "formula" = mathpost ~ I(anxiety-18.133) + I((anxiety-18.133)^2) + frlunch + mathpre + male, nodes = seq(25, 95, by = 1))
# model for x1 (anxiety)
mod.x1 <- list( "model"="linreg", "formula" = anxiety ~ frlunch + mathpre + male, nodes = seq(-10, 65, by = 1))
# model for x2 (frlunch)
mod.x2 <- list( "model"="logistic", "formula" = frlunch ~ mathpre + male, nodes = c(0, 1))
# estimate model
ind <- list(anxiety = mod.x1, frlunch = mod.x2)
regression <- mdmb::frm_em(dat = dat, dep = mod.y, ind = ind)
summary(regression)
summary(fit, standardize = TRUE)
# labels
figure <- 7
text <- "Regression line from the Curvilinear Regression Analysis"
if(figuretitles == 2){title <- paste0("Figure ", chapter, ".", figure, ": ", text)} else if(figuretitles == 1)
{title <- paste0("Figure ", chapter, ".", figure)} else {title <- ""}
Xlab <- "Math Anxiety (Centered)"
Ylab <- "Posttest Math Achievement"
# plot ranges
xrange <- c(0,40) - 20
yrange <- c(30,75)
# parameter values
xvalues <- seq(from = xrange[1], to = xrange[2], by = .10)
b0 <- 56; b1 <- -0.2568; b2 <- -0.0112
yhats <- b0 + b1*xvalues + b2*xvalues^2
# plot
CairoPDF(file = paste0(outputs, "Figure ", chapter, ".", figure, ".pdf"), family = "Palatia", width = 11, height = 8.5)
par(font.main = 3, cex.main = cexvalue0, cex.axis = cexvalue1, cex.lab = cexvalue1, mar = margins)
plot(xvalues, yhats, type ="l", main = title, xlim = range(xrange), ylim = range(yrange), xlab = NA, ylab = NA, axes = F, frame.plot = F, col = "black")
axis(side = 1, at = c(-20,-10,0,10,20))
axis(side = 2)
title(xlab = Xlab, ylab = Ylab, mgp = axislabelspacing)
dev.off()
summary(regression)
7.1111^2
# set working directory to the location of this script
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# read data from working directory
dat <- read.table(paste0(getwd(),"/pain.dat"), na.strings = "999")
names(dat) <- c("id", "male", "age", "edugroup", "workhrs",
"exercise", "pain", "sevpain", "anxiety", "stress", "control",
"depress", "interfere", "disability",
paste0("dep", seq(1:7)), paste0("int", seq(1:6)), paste0("dis", seq(1:6)))
model <- '
sevpain ~~ sevpain
disability ~~ disability
depress ~~ depress
male ~~ male
'
lavaan::inspectSampleCov(model, dat,meanstructure = TRUE)
summary(dat$disability)
summary(dat$depress)
# model for predictor x2 (sevpain)
nodes.x2 <- c(0,1)
model.x2 <- list( "model"="logistic", "formula" = sevpain ~ male, nodes = nodes.x2)
# model for predictor x1 (depression)
nodes.x1 <- seq(0, 35, by = 1)
model.x1 <- list( "model"="linreg", "formula" = depress ~ sevpain + male, nodes = nodes.x1)
# model for outcome
nodes.y <- seq(0, 47, by = 1)
model.y <- list("model" = "linreg", "formula" = disability ~ I(depress-14.717) + male + I((depress-14.717)*male), nodes = nodes.y)
# combine predictor models into a list
models.x <- list(depress = model.x1, male = model.x2)
# estimate factored regression model w mdmb
fit <- mdmb::frm_em(dat = dat, dep = model.y, ind = models.x)
summary(fit)
# model for predictor x2 (sevpain)
nodes.x2 <- c(0,1)
model.x2 <- list( "model"="logistic", "formula" = sevpain ~ male, nodes = nodes.x2)
# model for predictor x1 (depression)
nodes.x1 <- seq(0, 35, by = 1)
model.x1 <- list( "model"="linreg", "formula" = depress ~ sevpain + male, nodes = nodes.x1)
# model for outcome
nodes.y <- seq(0, 47, by = 1)
model.y <- list("model" = "linreg", "formula" = disability ~ I(depress-20.77) + male + I((depress-20.77)*male), nodes = nodes.y)
# combine predictor models into a list
models.x <- list(depress = model.x1, male = model.x2)
# estimate factored regression model w mdmb
fit <- mdmb::frm_em(dat = dat, dep = model.y, ind = models.x)
summary(fit)
model <- '
sevpain ~~ sevpain
disability ~~ disability
depress ~~ depress
male ~~ male
'
lavaan::inspectSampleCov(model, dat,meanstructure = TRUE)
# read data from working directory
dat <- read.table(paste0(getwd(),"/pain.dat"), na.strings = "999")
names(dat) <- c("id", "txgrp", "male", "age", "edugroup", "workhrs",
"exercise", "pain", "sevpain", "anxiety", "stress", "control",
"depress", "interfere", "disability",
paste0("dep", seq(1:7)), paste0("int", seq(1:6)), paste0("dis", seq(1:6)))
model <- '
sevpain ~~ sevpain
disability ~~ disability
depress ~~ depress
male ~~ male
'
lavaan::inspectSampleCov(model, dat,meanstructure = TRUE)
# model for predictor x2 (sevpain)
nodes.x2 <- c(0,1)
model.x2 <- list( "model"="logistic", "formula" = sevpain ~ male, nodes = nodes.x2)
# model for predictor x1 (depression)
nodes.x1 <- seq(0, 35, by = 1)
model.x1 <- list( "model"="linreg", "formula" = depress ~ sevpain + male, nodes = nodes.x1)
# model for outcome
nodes.y <- seq(0, 47, by = 1)
model.y <- list("model" = "linreg", "formula" = disability ~ I(depress-14.805) + male + I((depress-14.805)*male), nodes = nodes.y)
# combine predictor models into a list
models.x <- list(depress = model.x1, male = model.x2)
# estimate factored regression model w mdmb
fit <- mdmb::frm_em(dat = dat, dep = model.y, ind = models.x)
summary(fit)
# load libraries
library(mdmb)
library(lavaan)
# set working directory to the location of this script
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# read data from working directory
dat <- read.table(paste0(getwd(),"/pain.dat"), na.strings = "999")
names(dat) <- c("id", "txgrp", "male", "age", "edugroup", "workhrs",
"exercise", "pain", "sevpain", "anxiety", "stress", "control",
"depress", "interfere", "disability",
paste0("dep", seq(1:7)), paste0("int", seq(1:6)), paste0("dis", seq(1:6)))
# get mean for centering
model <- '
sevpain ~~ sevpain
disability ~~ disability
depress ~~ depress
male ~~ male
'
lavaan::inspectSampleCov(model, dat,meanstructure = TRUE)
# summarize distributions to determine pseudo-imputation ranges
summary(dat$disability)
summary(dat$depress)
# model for predictor x2 (sevpain)
nodes.x2 <- c(0,1)
model.x2 <- list( "model"="logistic", "formula" = sevpain ~ male, nodes = nodes.x2)
# model for predictor x1 (depression)
nodes.x1 <- seq(0, 35, by = 1)
model.x1 <- list( "model"="linreg", "formula" = depress ~ sevpain + male, nodes = nodes.x1)
# model for outcome
nodes.y <- seq(0, 47, by = 1)
model.y <- list("model" = "linreg", "formula" = disability ~ I(depress-14.805) + male + I((depress-14.805)*male) + sevpain, nodes = nodes.y)
# combine predictor models into a list
models.x <- list(depress = model.x1, male = model.x2)
# estimate factored regression model w mdmb
fit <- mdmb::frm_em(dat = dat, dep = model.y, ind = models.x)
summary(fit)
# labels
figure <- 6
text <- "Depression Slopes for Males and Females"
if(figuretitles == 2){title <- paste0("Figure ", chapter, ".", figure, ": ", text)} else if(figuretitles == 1)
{title <- paste0("Figure ", chapter, ".", figure)} else {title <- ""}
Xlab <- "Depression (Centered)"
Ylab <- "Psychosocial Disability"
# plot ranges
xrange <- c(-20,20)
yrange <- c(0,40)
# simple slopes
xvalues <- seq(from = xrange[1], to = xrange[2], by = .10)
b0 <- 21.65; b2 <- -0.79; b1 <- 0.38; b3 <- -0.24;
# g0 <- 14.772; g1 <- 1.002; varXr <- 38.559
m1 <- 0; m2 <- 1; y <- 12
# plot
CairoPDF(file = paste0(outputs, "Figure ", chapter, ".", figure, ".pdf"), family = "Palatia", width = 11, height = 8.5)
par(font.main = 3, cex.main = cexvalue0, cex.axis = cexvalue1, cex.lab = cexvalue1, mar = margins)
somedata <- rmvnorm(50, c(10,0), diag(2))
plot(somedata, main = title, xlim = range(xrange), ylim = range(yrange), xlab = NA, ylab = NA, axes = F, frame.plot = F, col = colornull)
abline(b0+b2*m1, b1+b3*m1, lty = linetype1, lwd = linesize1)
abline(b0+b2*m2, b1+b3*m2, lty = linetype2, lwd = linesize1)
axis(side = 1)
axis(side = 2)
title(xlab = Xlab, ylab = Ylab, mgp = axislabelspacing)
legend(5,10, legend=c("Female", "Male"), box.lty = 0, lty=linetype1:linetype2, cex = cexvalue1)
dev.off()
# load libraries
library(mdmb)
library(lavaan)
# set working directory to the location of this script
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# read data from working directory
dat <- read.table(paste0(getwd(),"/pain.dat"), na.strings = "999")
names(dat) <- c("id", "txgrp", "male", "age", "edugroup", "workhrs",
"exercise", "pain", "sevpain", "anxiety", "stress", "control",
"depress", "interfere", "disability",
paste0("dep", seq(1:7)), paste0("int", seq(1:6)), paste0("dis", seq(1:6)))
# get mean for centering
model <- '
sevpain ~~ sevpain
disability ~~ disability
depress ~~ depress
male ~~ male
'
lavaan::inspectSampleCov(model, dat,meanstructure = TRUE)
# summarize distributions to determine pseudo-imputation ranges
summary(dat$disability)
summary(dat$depress)
# model for predictor x2 (sevpain)
nodes.x2 <- c(0,1)
model.x2 <- list( "model"="logistic", "formula" = sevpain ~ male, nodes = nodes.x2)
# model for predictor x1 (depression)
nodes.x1 <- seq(0, 35, by = 1)
model.x1 <- list( "model"="linreg", "formula" = depress ~ sevpain + male, nodes = nodes.x1)
# model for outcome
nodes.y <- seq(0, 47, by = 1)
model.y <- list("model" = "linreg", "formula" = disability ~ I(depress-14.805) + male + I((depress-14.805)*male) + sevpain, nodes = nodes.y)
# combine predictor models into a list
models.x <- list(depress = model.x1, male = model.x2)
# estimate factored regression model w mdmb
fit <- mdmb::frm_em(dat = dat, dep = model.y, ind = models.x)
summary(fit)
