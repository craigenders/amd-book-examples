# read data from working directory
dat <- read.table(paste0(getwd(),"/paincomplete.dat"))
names(dat) <- c("employee","team","turnover","male","empower","lmx","worksat","climate","cohesion")
# specify model
model <- '
worksat ~~ worksat
empower ~~ empower
lmx ~~ lmx
'
# estimate model in lavaan
fit <- sem(model, dat, meanstructure = TRUE, fixed.x = FALSE)
summary(fit, standardize = TRUE)
# example 3.2: covariance matrix and correlations
# requires fdir and lavaan packages
# set working directory
fdir::set()
# read data from working directory
dat <- read.table("employee.dat", na.strings = "999")
names(dat) <- c("employee","team","turnover","male","empower","lmx","worksat","climate","cohesion")
# specify model
model <- '
worksat ~~ empower
worksat ~~ lmx
empower ~~ lmx
'
# estimate model in lavaan
fit <- lavaan::sem(model, dat, meanstructure = TRUE, fixed.x = FALSE)
summary(fit, standardize = TRUE)
# estimate model in lavaan
fit <- lavaan::sem(model, dat, meanstructure = TRUE, fixed.x = FALSE)
summary(fit, standardize = TRUE)
# load libraries
library(lavaan)
# set working directory to the location of this script
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# read data from working directory
dat <- read.table(paste0(getwd(),"/employee.dat"), na.strings = "999")
names(dat) <- c("employee","team","turnover","male","empower","lmx","worksat","climate","cohesion")
# specify model
model <- '
worksat ~~ worksat
empower ~~ empower
lmx ~~ lmx
'
# estimate model in lavaan
fit <- sem(model, dat, meanstructure = TRUE, fixed.x = FALSE)
summary(fit, standardize = TRUE)
# load libraries
library(lavaan)
# set working directory to the location of this script
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# read data from working directory
dat <- read.table(paste0(getwd(),"/employee.dat"), na.strings = "999")
names(dat) <- c("employee","team","turnover","male","empower","lmx","worksat","climate","cohesion")
# specify model
model <- '
worksat ~~ worksat
empower ~~ empower
lmx ~~ lmx
'
# estimate model in lavaan
fit <- sem(model, dat, meanstructure = TRUE, fixed.x = FALSE)
summary(fit, standardize = TRUE)
# example 3.2: covariance matrix and correlations
# requires fdir and lavaan packages
# set working directory
fdir::set()
# read data from working directory
dat <- read.table("employee.dat", na.strings = "999")
names(dat) <- c("employee","team","turnover","male","empower","lmx","worksat","climate","cohesion")
# specify model
model <- '
worksat ~~ empower
worksat ~~ lmx
empower ~~ lmx
'
# estimate model in lavaan
fit <- lavaan::sem(model, dat, meanstructure = TRUE, fixed.x = FALSE)
summary(fit, standardize = TRUE)
# example 3.2: covariance matrix and correlations
# requires fdir and lavaan packages
# set working directory
fdir::set()
# read data from working directory
dat <- read.table("employee.dat", na.strings = "999")
names(dat) <- c("employee","team","turnover","male","empower","lmx","worksat","climate","cohesion")
# specify model
model <- '
worksat ~~ empower
worksat ~~ lmx
empower ~~ lmx
'
# estimate model in lavaan
fit <- lavaan::sem(model, dat, meanstructure = TRUE, fixed.x = FALSE)
summary(fit, standardize = TRUE)
# example 3.2: covariance matrix and correlations
# requires fdir and lavaan packages
# set working directory
fdir::set()
# read data from working directory
dat <- read.table("employee.dat", na.strings = "999")
names(dat) <- c("employee","team","turnover","male","empower","lmx","worksat","climate","cohesion")
# specify model
model <- '
worksat ~~ empower
worksat ~~ lmx
empower ~~ lmx
'
# estimate model in lavaan
fit <- lavaan::sem(model, dat, meanstructure = TRUE, fixed.x = FALSE)
summary(fit, standardize = TRUE)
inspect(fit, "patterns")
# estimate model in lavaan
fit <- lavaan::sem(model, dat, meanstructure = TRUE, fixed.x = FALSE, missing = "fiml")
summary(fit, standardize = TRUE)
inspect(fit, "patterns")
inspect(fit, c("coveraage", "patterns"))
inspect(fit, "coveraage")
inspect(fit, "coverage")
# example 3.2: covariance matrix and correlations
# requires fdir and lavaan packages
# set working directory
fdir::set()
# read data from working directory
dat <- read.table("employee.dat", na.strings = "999")
names(dat) <- c("employee","team","turnover","male","empower","lmx","worksat","climate","cohesion")
# specify model
model <- '
worksat ~~ empower
worksat ~~ lmx
empower ~~ lmx
'
# estimate model in lavaan
fit <- lavaan::sem(model, dat, meanstructure = TRUE, fixed.x = FALSE, missing = "fiml")
summary(fit, standardize = TRUE)
# missing data patterns and proportion observed data (coverage)
inspect(fit, "patterns")
inspect(fit, "coverage")
# example 3.6: multiple regression with normally distributed incomplete predictors
# requires fdir and lavaan packages
# set working directory
fdir::set()
# read data from working directory
dat <- read.table("smoking.dat", na.strings = "999")
names(dat) <- c("id","intensity","hvysmoker","age","parsmoke","female","race","income","pareduc")
# specify model
model <- 'intensity ~  parsmoke + income + age'
# estimate model in lavaan
fit <- lavaan::sem(model, dat, meanstructure = TRUE, fixed.x = FALSE, missing = "fiml")
summary(fit, standardize = TRUE)
# missing data patterns and proportion observed data (coverage)
inspect(fit, "patterns")
inspect(fit, "coverage")
# summarize distributions to determine pseudo-imputation ranges
summary(dat[,c("intensity","age")])
# summarize incomplete predictors to determine ranges for pseudo-imputations
summary(dat[,c("intensity","parsmoke","income","age")])
# example 3.6: multiple regression with factored specificaton for incomplete predictors
# requires fdir and mdmb packages
# set working directory
fdir::set()
# read data from working directory
dat <- read.table("smoking.dat", na.strings = "999")
names(dat) <- c("id","intensity","hvysmoker","age","parsmoke","female","race","income","pareduc")
# summarize incomplete predictors to determine ranges for pseudo-imputations
summary(dat[,c("intensity","parsmoke","income","age")])
# set ranges (nodes) for pseudo-imputations
nodes.income <- seq(0, 20, by = 1)
nodes.parsmoke <- c(0,1)
nodes.intensity <- seq(0, 40, by = 1)
# model for income predictor (income | age)
model.income <- list( "model"="linreg", "formula" = income ~ age, nodes = nodes.income)
# model for parsmoke predictor (parsmoke | income age)
model.parsmoke <- list( "model"="logistic", "formula" = parsmoke ~ age, nodes = nodes.parsmoke)
# model for intensity outcome (intensity | parsmoke income age)
model.intensity <- list("model" = "linreg", "formula" = intensity ~  parsmoke + income + age, nodes = nodes.intensity)
# combine predictor models into a list
predictor.models <- list(parsmoke = model.parsmoke, income = model.income)
# estimate factored regression model w mdmb
fit <- mdmb::frm_em(dat = dat, dep = model.intensity, ind = predictor.models)
summary(fit)
# example 3.8: moderated regression with factored specification for incomplete predictors
# requires fdir, lavaan, and mdmb packages
# set working directory
fdir::set()
# read data from working directory
dat <- read.table("pain.dat", na.strings = "999")
names(dat) <- c("id", "txgrp", "male", "age", "edugroup", "workhrs", "exercise", "paingrps",
"pain", "anxiety", "stress", "control", "depress", "interfere", "disability",
paste0("dep", seq(1:7)), paste0("int", seq(1:6)), paste0("dis", seq(1:6)))
# estimate grand means for centering
model <- '
disability ~~ depress
disability ~~ male
disability ~~ pain
depress ~~ male
depress ~~ pain
male ~~ pain
'
lavaan::inspectSampleCov(model, dat, meanstructure = TRUE, missing = "fiml")
# estimate sample statistics in lavaan
lavaan::inspectSampleCov(model, dat, meanstructure = TRUE, missing = "fiml")
# summarize incomplete predictors to determine ranges for pseudo-imputations
summary(dat[,c("disability","depress","male","pain")])
# estimate sample statistics in lavaan
lavaan::inspectSampleCov(model, dat, meanstructure = TRUE, missing = "fiml")
# example 3.8: moderated regression with factored specification for incomplete predictors
# requires fdir, lavaan, and mdmb packages
# set working directory
fdir::set()
# read data from working directory
dat <- read.table("pain.dat", na.strings = "999")
names(dat) <- c("id", "txgrp", "male", "age", "edugroup", "workhrs", "exercise", "paingrps",
"pain", "anxiety", "stress", "control", "depress", "interfere", "disability",
paste0("dep", seq(1:7)), paste0("int", seq(1:6)), paste0("dis", seq(1:6)))
# specify lavaan model for sample statistics
model <- '
disability ~~ depress
disability ~~ male
disability ~~ pain
depress ~~ male
depress ~~ pain
male ~~ pain
'
# estimate sample statistics in lavaan
lavaan::inspectSampleCov(model, dat, meanstructure = TRUE, missing = "fiml")
depress.mean <- 14.718
# summarize incomplete predictors to determine ranges for pseudo-imputations
summary(dat[,c("disability","depress","male","pain")])
# set ranges (nodes) for pseudo-imputations
nodes.pain <- c(0,1)
nodes.depress <- seq(0, 35, by = 1)
nodes.disability <- seq(0, 47, by = 1)
# model for pain predictor (pain | male)
model.pain <- list( "model"="logistic", "formula" = pain ~ male, nodes = nodes.pain)
# model for depression predictor (depress | pain male)
model.depress <- list( "model"="linreg", "formula" = depress ~ pain + male, nodes = nodes.depress)
# model for disability outcome (disability | depress male depress*male pain)
model.disability <- list("model" = "linreg", "formula" = disability ~ I(depress-depress.mean) + male + I((depress-depress.mean)*male) + pain, nodes = nodes.disability)
# combine predictor models into a list
predictor.models <- list(pain = model.pain, depress = model.depress)
# estimate factored regression model w mdmb
fit <- mdmb::frm_em(dat = dat, dep = model.disability, ind = predictor.models)
summary(fit)
# estimate factored regression model w mdmb
fit <- mdmb::frm_em(dat = dat, dep = model.disability, ind = predictor.models)
# model for disability outcome (disability | depress male depress*male pain)
model.disability <- list("model" = "linreg", "formula" = disability ~ I(depress-14.718) + male + I((depress-14.718)*male) + pain, nodes = nodes.disability)
# combine predictor models into a list
predictor.models <- list(pain = model.pain, depress = model.depress)
fit <- mdmb::frm_em(dat = dat, dep = model.disability, ind = predictor.models)
summary(fit)
# model for disability outcome (disability | depress male depress*male pain)
model.disability <- list("model" = "linreg", "formula" = disability ~ I(depress - 14.718) + male + I((depress - 14.718)*male) + pain, nodes = nodes.disability)
# example 3.8: moderated regression with factored specification for incomplete predictors
# requires fdir, lavaan, and mdmb packages
# set working directory
fdir::set()
# read data from working directory
dat <- read.table("pain.dat", na.strings = "999")
names(dat) <- c("id", "txgrp", "male", "age", "edugroup", "workhrs", "exercise", "paingrps",
"pain", "anxiety", "stress", "control", "depress", "interfere", "disability",
paste0("dep", seq(1:7)), paste0("int", seq(1:6)), paste0("dis", seq(1:6)))
# specify lavaan model for sample statistics
model <- '
disability ~~ depress
disability ~~ male
disability ~~ pain
depress ~~ male
depress ~~ pain
male ~~ pain
'
# estimate sample statistics in lavaan
lavaan::inspectSampleCov(model, dat, meanstructure = TRUE, missing = "fiml")
# summarize incomplete predictors to determine ranges for pseudo-imputations
summary(dat[,c("disability","depress","male","pain")])
# set ranges (nodes) for pseudo-imputations
nodes.pain <- c(0,1)
nodes.depress <- seq(0, 35, by = 1)
nodes.disability <- seq(0, 47, by = 1)
# model for pain predictor (pain | male)
model.pain <- list( "model"="logistic", "formula" = pain ~ male, nodes = nodes.pain)
# model for depression predictor (depress | pain male)
model.depress <- list( "model"="linreg", "formula" = depress ~ pain + male, nodes = nodes.depress)
# model for disability outcome (disability | depress male depress*male pain)
# depression mean = 14.718
model.disability <- list("model" = "linreg", "formula" = disability ~ I(depress - 14.718) + male + I((depress - 14.718)*male) + pain, nodes = nodes.disability)
# combine predictor models into a list
predictor.models <- list(pain = model.pain, depress = model.depress)
# estimate factored regression model w mdmb
fit <- mdmb::frm_em(dat = dat, dep = model.disability, ind = predictor.models)
summary(fit)
# example 3.8: moderated regression with factored specification for incomplete predictors
# requires fdir, lavaan, and mdmb packages
# set working directory
fdir::set()
# read data from working directory
dat <- read.table("math.dat", na.strings = "999")
names(dat) <- c("id", "male", "frlunch", "achievegrp", "stanread", "efficacy", "anxiety", "mathpre", "mathpost")
# specify lavaan model for sample statistics
model <- '
mathpost ~~ anxiety
mathpost ~~ frlunch
mathpost ~~ mathpre
mathpost ~~ male
anxiety ~~ frlunch
anxiety ~~ mathpre
anxiety ~~ male
frlunch ~~ mathpre
frlunch ~~ male
mathpre ~~ male
'
# estimate sample statistics in lavaan
lavaan::inspectSampleCov(model, dat, meanstructure = TRUE, missing = "fiml")
# summarize incomplete predictors to determine ranges for pseudo-imputations
summary(dat[,c("mathpost","anxiety","frlunch","mathpre","male")])
# estimate sample statistics in lavaan
lavaan::inspectSampleCov(model, dat, meanstructure = TRUE, missing = "fiml")
# combine predictor models into a list
predictor.models <- list(frlunch = model.frlunch, anxiety = model.anxiety)
# example 3.8: moderated regression with factored specification for incomplete predictors
# requires fdir, lavaan, and mdmb packages
# set working directory
fdir::set()
# read data from working directory
dat <- read.table("math.dat", na.strings = "999")
names(dat) <- c("id", "male", "frlunch", "achievegrp", "stanread", "efficacy", "anxiety", "mathpre", "mathpost")
# specify lavaan model for sample statistics
model <- '
mathpost ~~ anxiety
mathpost ~~ frlunch
mathpost ~~ mathpre
mathpost ~~ male
anxiety ~~ frlunch
anxiety ~~ mathpre
anxiety ~~ male
frlunch ~~ mathpre
frlunch ~~ male
mathpre ~~ male
'
# estimate sample statistics in lavaan
lavaan::inspectSampleCov(model, dat, meanstructure = TRUE, missing = "fiml")
# summarize incomplete predictors to determine ranges for pseudo-imputations
summary(dat[,c("mathpost","anxiety","frlunch","mathpre","male")])
# set ranges (nodes) for pseudo-imputations
nodes.frlunch <- c(0,1)
nodes.anxiety <- seq(-10, 65, by = 1)
nodes.mathpost <- seq(25, 95, by = 1)
# model for frlunch predictor (frlunch | mathpre male)
model.frlunch <- list("model"="logistic", "formula" = frlunch ~ mathpre + male, nodes.frlunch)
# model for anxiety predictor (anxiety | frlunch mathpre male)
model.anxiety <- list( "model"="linreg", "formula" = anxiety ~ frlunch + mathpre + male, nodes = nodes.anxiety)
# model for mathpost outcome (mathpost | anxiety anxiety^2 frlunch mathpre male
# anxiety mean = 18.058
model.mathpost <- list("model" = "linreg", "formula" = mathpost ~ I(anxiety - 18.058) + I((anxiety - 18.058)^2) + frlunch + mathpre + male, nodes = nodes.mathpost)
# combine predictor models into a list
predictor.models <- list(frlunch = model.frlunch, anxiety = model.anxiety)
# estimate factored regression model w mdmb
fit <- mdmb::frm_em(dat = dat, dep = model.mathpost, ind = predictor.models)
summary(fit)
# example 3.10: regression with auxiliary variables
# requires fdir, lavaan, and mdmb packages
# set working directory
fdir::set()
# read data from working directory
dat <- read.table("drugtrial.dat", na.strings = "999")
names(dat) <- c("id","male","drug","severe0","severe1","severe3","severe6","dropgrp","dropout","sdrop3","sdrop6")
# specify lavaan model with no auxiliary variables
model <- 'severity6 ~ drug + severity0 + male'
# estimate model in lavaan
fit <- lavaan::sem(model, dat, meanstructure = TRUE, fixed.x = FALSE, missing = "fiml")
summary(fit, standardize = TRUE)
# read data from working directory
dat <- read.table("drugtrial.dat", na.strings = "999")
names(dat) <- c("id","male","drug","severity0","severity1","severity3","severity6","dropgrp","dropout","sdrop3","sdrop6")
# specify lavaan model with no auxiliary variables
model <- 'severity6 ~ drug + severity0 + male'
# estimate model in lavaan
fit <- lavaan::sem(model, dat, meanstructure = TRUE, fixed.x = FALSE, missing = "fiml")
summary(fit, standardize = TRUE)
# estimate saturated correlates model with semtools and lavaan
fit <- semTools::sem.auxiliary(model, dat, aux = c("severity1","severity3"))
summary(fit, standardize = TRUE)
# specify lavaan model with auxiliary variables as extra outcomes
model.extra.dv <- 'severity6 ~ drug + severity0 + male
severity1 ~ drug + severity0 + male
severity3 ~ drug + severity0 + male
severity6 ~~ severity1
severity6 ~~ severity3
severity1 with severity3'
# estimate extra dependent variable model in
fit <- lavaan::sem(model.extra.dv, dat, meanstructure = TRUE, fixed.x = FALSE, missing = "fiml")
summary(fit, standardize = TRUE)
# specify lavaan model with auxiliary variables as extra outcomes
model.extra.dv <- 'severity6 ~ drug + severity0 + male
severity1 ~ drug + severity0 + male
severity3 ~ drug + severity0 + male
severity6 ~~ severity1
severity6 ~~ severity3
severity1 with severity3'
# estimate extra dependent variable model in
fit <- lavaan::sem(model.extra.dv, dat, meanstructure = TRUE, fixed.x = FALSE, missing = "fiml")
summary(fit, standardize = TRUE)
model.extra.dv <- 'severity6 ~ drug + severity0 + male
severity1 ~ drug + severity0 + male
severity3 ~ drug + severity0 + male
severity6 ~~ severity1
severity6 ~~ severity3
severity1 ~~ severity3'
# estimate extra dependent variable model in
fit <- lavaan::sem(model.extra.dv, dat, meanstructure = TRUE, fixed.x = FALSE, missing = "fiml")
summary(fit, standardize = TRUE)
# specify lavaan model with factored (sequential) specification for auxiliary variables
model.factorav <- 'severity6 ~ drug + severity0 + male
severity3 ~ severity6 + drug + severity0 + male
severity1 ~ severity3 + severity6 + drug + severity0 + male'
# estimate factored regression model for auxiliary variables in lavaan
fit.factorav <- lavaan::sem(model.factorav, dat, meanstructure = TRUE, fixed.x = FALSE, missing = "fiml")
summary(fit.factorav, standardize = TRUE)
# estimate sample statistics in lavaan
lavaan::inspectSampleCov(model.extradv, dat, meanstructure = TRUE, missing = "fiml")
# specify lavaan model with auxiliary variables as extra outcomes
model.extradv <- 'severity6 ~ drug + severity0 + male
severity1 ~ drug + severity0 + male
severity3 ~ drug + severity0 + male
severity6 ~~ severity1
severity6 ~~ severity3
severity1 ~~ severity3'
fit.extradv <- lavaan::sem(model.extra.dv, dat, meanstructure = TRUE, fixed.x = FALSE, missing = "fiml")
summary(fit.extradv, standardize = TRUE)
# estimate sample statistics in lavaan
lavaan::inspectSampleCov(fit.extradv, dat, meanstructure = TRUE, missing = "fiml")
# estimate sample statistics in lavaan
lavaan::inspectSampleCov(fit.extradv, dat, meanstructure = TRUE, fixed.x = FALSE, missing = "fiml")
# summarize incomplete variables to determine ranges for pseudo-imputations
summary(dat[,c("severity6","severity3","severity1")])
# set ranges (nodes) for pseudo-imputations
nodes.severity6 <- seq(1, 7, by = .25)
nodes.severity3 <- seq(1, 7, by = .25)
nodes.severity1 <- seq(1, 7, by = .25)
# summarize incomplete variables to determine ranges for pseudo-imputations
summary(dat[,c("severity6","severity0","severity3","severity1")])
# estimate sample statistics in lavaan
lavaan::inspectSampleCov(fit.extradv, dat, meanstructure = TRUE, fixed.x = FALSE, missing = "fiml")
# set ranges (nodes) for pseudo-imputations
nodes.severity0 <- seq(1, 7, by = .25)
nodes.severity6 <- seq(1, 7, by = .25)
nodes.severity3 <- seq(1, 7, by = .25)
nodes.severity1 <- seq(1, 7, by = .25)
# model for severity0 predictor (severity1 | drug male)
model.severity0 <- list( "model"="linreg", "formula" = severity0 ~ drug + male, nodes = nodes.severity0)
# model for severity6 outcome (severity6 | severity0 drug male)
# severity0 mean = 5.367
# male mean = .474
model.severity6 <- list("model" = "linreg", "formula" = severity6 ~ drug I(severity0 - 5.367) + I(male - .474), nodes = nodes.severity6)
# model for severity3 auxiliary variable (severity3 | severity6 severity0 drug male)
model.severity3 <- list( "model"="linreg", "formula" = severity3 ~ severity6 + drug + severity0 + male, nodes = nodes.severity3)
# model for severity1 auxiliary variable (severity1 | severity3 severity6 severity0 drug male)
model.severity1 <- list( "model"="linreg", "formula" = severity1 ~ severity3 + severity6 + drug + severity0 + male, nodes = nodes.severity1)
# combine predictor models into a list (focal model functions as a predictor model)
predictor.models <- list(severity0 = model.severity0, severity6 = model.severity6, severity3 = model.severity3)
# model for severity6 outcome (severity6 | severity0 drug male)
# severity0 mean = 5.367
# male mean = .474
model.severity6 <- list("model" = "linreg", "formula" = severity6 ~ drug I(severity0 - 5.367) + I(male - .474), nodes = nodes.severity6)
# model for severity6 outcome (severity6 | severity0 drug male)
# severity0 mean = 5.367
# male mean = .474
model.severity6 <- list("model" = "linreg", "formula" = severity6 ~ drug + I(severity0 - 5.367) + I(male - .474), nodes = nodes.severity6)
# model for severity3 auxiliary variable (severity3 | severity6 severity0 drug male)
model.severity3 <- list( "model"="linreg", "formula" = severity3 ~ severity6 + drug + severity0 + male, nodes = nodes.severity3)
# model for severity1 auxiliary variable (severity1 | severity3 severity6 severity0 drug male)
model.severity1 <- list( "model"="linreg", "formula" = severity1 ~ severity3 + severity6 + drug + severity0 + male, nodes = nodes.severity1)
# combine predictor models into a list (focal model functions as a predictor model)
predictor.models <- list(severity0 = model.severity0, severity6 = model.severity6, severity3 = model.severity3)
# estimate factored regression model w mdmb
fit <- mdmb::frm_em(dat = dat, dep = model.severity1, ind = predictor.models)
summary(fit)
summary(fit.factorav, standardize = TRUE)
# estimate sample statistics in lavaan
lavaan::inspectSampleCov(fit.extradv, dat, meanstructure = TRUE, fixed.x = FALSE, missing = "fiml")
# model for severity0 predictor (severity1 | drug male)
model.severity0 <- list( "model"="linreg", "formula" = severity0 ~ drug + male, nodes = nodes.severity0)
# model for severity6 outcome (severity6 | severity0 drug male)
# severity0 mean = 5.367
# male mean = .474
model.severity6 <- list("model" = "linreg", "formula" = severity6 ~ drug + severity0 + male, nodes = nodes.severity6)
# model.severity6 <- list("model" = "linreg", "formula" = severity6 ~ drug + I(severity0 - 5.367) + I(male - .474), nodes = nodes.severity6)
# model for severity3 auxiliary variable (severity3 | severity6 severity0 drug male)
model.severity3 <- list( "model"="linreg", "formula" = severity3 ~ severity6 + drug + severity0 + male, nodes = nodes.severity3)
# model for severity1 auxiliary variable (severity1 | severity3 severity6 severity0 drug male)
model.severity1 <- list( "model"="linreg", "formula" = severity1 ~ severity3 + severity6 + drug + severity0 + male, nodes = nodes.severity1)
# combine predictor models into a list (focal model functions as a predictor model)
predictor.models <- list(severity0 = model.severity0, severity6 = model.severity6, severity3 = model.severity3)
# estimate factored regression model w mdmb
fit <- mdmb::frm_em(dat = dat, dep = model.severity1, ind = predictor.models)
summary(fit)
# summarize incomplete variables to determine ranges for pseudo-imputations
summary(dat[,c("severity6","severity0","severity3","severity1")])
summary(fit)
fdir::set()
# read data from working directory
dat <- read.table("drugtrial.dat", na.strings = "999")
names(dat) <- c("id","male","drug","severity0","severity1","severity3","severity6","dropgrp","edrop","ldrop","dropout","sdrop3","sdrop6")
# center at the means
dat$severity0.cgm <- dat$severity0 - mean(dat$severity0, na.rm = T)
dat$male.cgm <- dat$male - mean(dat$male, na.rm = T)
# specify lavaan model with no auxiliary variables
model <- 'severity6 ~ drug + severity0.cgm + male.cgm'
# estimate model with no auxiliary variables
fit.noaux <- lavaan::sem(model, dat, fixed.x = F, missing = "fiml")
lavaan::summary(fit.noaux, rsquare = T, standardize = T)
