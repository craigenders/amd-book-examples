ll <- dmvnorm(Y,mu,sigma)
z[m,s] <- ll
# if(ll > zrange[1]){z[s,m] <- ll}
}
}
# plot
# pdf(paste0(outputs, "Figure ", chapter, ".", figure, ".pdf"))
# par(font.main = 3, cex.main = cexvalue0, cex.axis = cexvalue_1, cex.lab = cexvalue0, mar = margins)
CairoPDF(file = paste0(outputs, "Figure ", chapter, ".", figure, ".pdf"), family = "Palatia", width = 11, height = 8.5)
par(font.main = 3, cex.main = cexvalue0, cex.axis = cexvalue1, cex.lab = cexvalue1, mar = margins)
contour(x = sigmavaluesx, y = sigmavaluesy, z, main = title, frame.plot = F, drawlabels = F, nlevels = 10, col = color6a)
points(datCOM, pch = 21, col = color13b, cex = cexvalue_1)
points(datMIS, pch = 3, col = color0, cex = cexvalue_1)
abline(a = b0, b = b1)
# abline(v = muML[1], h = muML[2], col = color0, lty = linetype2)
axis(side = 1, labels = T)
axis(side = 2, labels = T)
title(xlab = Xlab, ylab = Ylab, mgp = axislabelspacing)
dev.off()
###############################################################################
# figure 10-13: DAGs and diagrams
###############################################################################
###############################################################################
# figure 14: Listwise Scatterplot
###############################################################################
# labels
figure <- 14
text <- "Listwise Deletion Scatterplot"
if(figuretitles == 2){title <- paste0("Figure ", chapter, ".", figure, ": ", text)} else if(figuretitles == 1)
{title <- paste0("Figure ", chapter, ".", figure)} else {title <- ""}
Xlab <- "Perceived Control Over Pain"
Ylab <- "Depression"
yrange <- c(0,35)
xrange <- c(0,40)
zrange <- c(0,.006)
# parameters
muLW <- c(22.93, 13.79)
sigmaLW <- matrix(c(18.02, -7.35, -7.35, 35), ncol = 2)
muML <- c(20, 15)
sigmaML <- matrix(c(27, -11, -11, 38), ncol = 2)
b1 <- sigmaLW[2,1] / sigmaLW[1,1]
b0 <- muLW[2] - b1*muLW[1]
set.seed(90291)
N <- 275
datML <- rmvnorm(N, muML, sigmaML)
datML[datML[,2] < 1, 2] <- 1
b0miss <- 3.86 # 50%
# b0miss <- 2.905 # 25%
b1miss <- -.193
rstar <- b0miss + b1miss*datML[,1] + rnorm(N, 0, 1)
missind <- rep(0, nrow(datML))
missind[rstar > 0] <- 1
datCOM <- datML[missind == 0,]
datMIS <- datML[missind == 1,]
# elevation data
sigmavaluesx <- seq(from = xrange[1], to = xrange[2], length = 90 + 1)
sigmavaluesy <- seq(from = yrange[1], to = yrange[2], length = 90 + 1)
z = matrix(zrange[1], ncol = length(sigmavaluesx), nrow = length(sigmavaluesy))
for(m in 1:length(sigmavaluesx)){
for(s in 1:length(sigmavaluesy)){
Y <- c(sigmavaluesx[m],sigmavaluesy[s])
ll <- dmvnorm(Y,muML,sigmaML)
z[m,s] <- ll
# if(ll > zrange[1]){z[s,m] <- ll}
}
}
# plot
# pdf(paste0(outputs, "Figure ", chapter, ".", figure, ".pdf"))
# par(font.main = 3, cex.main = cexvalue0, cex.axis = cexvalue_1, cex.lab = cexvalue0, mar = margins)
CairoPDF(file = paste0(outputs, "Figure ", chapter, ".", figure, ".pdf"), family = "Palatia", width = 11, height = 8.5)
par(font.main = 3, cex.main = cexvalue0, cex.axis = cexvalue1, cex.lab = cexvalue1, mar = margins)
contour(x = sigmavaluesx, y = sigmavaluesy, z, main = title, frame.plot = F, drawlabels = F, nlevels = 10, col = color6a)
points(datCOM, pch = 21, col = color11b, cex = cexvalue_1)
points(muLW[1], muLW[2], pch = 20, cex = cexvalue1)
# abline(v = muLW[1], h = muLW[2], col = color0, lty = linetype3)
axis(side = 1, labels = T)
axis(side = 2, labels = T)
title(xlab = Xlab, ylab = Ylab, mgp = axislabelspacing)
dev.off()
###############################################################################
# figure 15: Mean Imputation Scatterplot
###############################################################################
# labels
figure <- 15
text <- "Mean Imputation Scatterplot"
if(figuretitles == 2){title <- paste0("Figure ", chapter, ".", figure, ": ", text)} else if(figuretitles == 1)
{title <- paste0("Figure ", chapter, ".", figure)} else {title <- ""}
Xlab <- "Perceived Control Over Pain"
Ylab <- "Depression"
yrange <- c(0,35)
xrange <- c(0,40)
zrange <- c(0,.006)
# parameters
muLW <- c(22.93, 13.79)
sigmaLW <- matrix(c(18.02, -7.35, -7.35, 35), ncol = 2)
muML <- c(20, 15)
sigmaML <- matrix(c(27, -11, -11, 38), ncol = 2)
b1 <- sigmaLW[2,1] / sigmaLW[1,1]
b0 <- muLW[2] - b1*muLW[1]
set.seed(90291)
N <- 275
datML <- rmvnorm(N, muML, sigmaML)
datML[datML[,2] < 1, 2] <- 1
b0miss <- 3.86 # 50%
# b0miss <- 2.905 # 25%
b1miss <- -.193
rstar <- b0miss + b1miss*datML[,1] + rnorm(N, 0, 1)
missind <- rep(0, nrow(datML))
missind[rstar > 0] <- 1
datCOM <- datML[missind == 0,]
datMIS <- datML[missind == 1,]
datMIS[,2] <- mean(datCOM[,2])
# elevation data
sigmavaluesx <- seq(from = xrange[1], to = xrange[2], length = 90 + 1)
sigmavaluesy <- seq(from = yrange[1], to = yrange[2], length = 90 + 1)
z = matrix(zrange[1], ncol = length(sigmavaluesx), nrow = length(sigmavaluesy))
for(m in 1:length(sigmavaluesx)){
for(s in 1:length(sigmavaluesy)){
Y <- c(sigmavaluesx[m],sigmavaluesy[s])
ll <- dmvnorm(Y,muML,sigmaML)
z[m,s] <- ll
# if(ll > zrange[1]){z[s,m] <- ll}
}
}
# plot
# pdf(paste0(outputs, "Figure ", chapter, ".", figure, ".pdf"))
# par(font.main = 3, cex.main = cexvalue0, cex.axis = cexvalue_1, cex.lab = cexvalue0, mar = margins)
CairoPDF(file = paste0(outputs, "Figure ", chapter, ".", figure, ".pdf"), family = "Palatia", width = 11, height = 8.5)
par(font.main = 3, cex.main = cexvalue0, cex.axis = cexvalue1, cex.lab = cexvalue1, mar = margins)
contour(x = sigmavaluesx, y = sigmavaluesy, z, main = title, frame.plot = F, drawlabels = F, nlevels = 10, col = color6a)
points(datCOM, pch = 21, col = color13b, cex = cexvalue_1)
points(datMIS, pch = 3, col = color0, cex = cexvalue_1)
axis(side = 1, labels = T)
axis(side = 2, labels = T)
title(xlab = Xlab, ylab = Ylab, mgp = axislabelspacing)
dev.off()
###############################################################################
# figure 16: Regression Imputation Scatterplot
###############################################################################
# labels
figure <- 16
text <- "Regression Imputation Scatterplot"
if(figuretitles == 2){title <- paste0("Figure ", chapter, ".", figure, ": ", text)} else if(figuretitles == 1)
{title <- paste0("Figure ", chapter, ".", figure)} else {title <- ""}
Xlab <- "Perceived Control Over Pain"
Ylab <- "Depression"
yrange <- c(0,35)
xrange <- c(0,40)
zrange <- c(0,.006)
# parameters
muLW <- c(22.93, 13.79)
sigmaLW <- matrix(c(18.02, -7.35, -7.35, 35), ncol = 2)
muML <- c(20, 15)
sigmaML <- matrix(c(27, -11, -11, 38), ncol = 2)
b1 <- sigmaLW[2,1] / sigmaLW[1,1]
b0 <- muLW[2] - b1*muLW[1]
set.seed(90291)
N <- 275
datML <- rmvnorm(N, muML, sigmaML)
datML[datML[,2] < 1, 2] <- 1
b0miss <- 3.86 # 50%
# b0miss <- 2.905 # 25%
b1miss <- -.193
rstar <- b0miss + b1miss*datML[,1] + rnorm(N, 0, 1)
missind <- rep(0, nrow(datML))
missind[rstar > 0] <- 1
datCOM <- datML[missind == 0,]
datMIS <- datML[missind == 1,]
datMIS[,2] <- b0 + b1*datMIS[,1]
# elevation data
sigmavaluesx <- seq(from = xrange[1], to = xrange[2], length = 90 + 1)
sigmavaluesy <- seq(from = yrange[1], to = yrange[2], length = 90 + 1)
z = matrix(zrange[1], ncol = length(sigmavaluesx), nrow = length(sigmavaluesy))
for(m in 1:length(sigmavaluesx)){
for(s in 1:length(sigmavaluesy)){
Y <- c(sigmavaluesx[m],sigmavaluesy[s])
ll <- dmvnorm(Y,muML,sigmaML)
z[m,s] <- ll
# if(ll > zrange[1]){z[s,m] <- ll}
}
}
# plot
# pdf(paste0(outputs, "Figure ", chapter, ".", figure, ".pdf"))
# par(font.main = 3, cex.main = cexvalue0, cex.axis = cexvalue_1, cex.lab = cexvalue0, mar = margins)
CairoPDF(file = paste0(outputs, "Figure ", chapter, ".", figure, ".pdf"), family = "Palatia", width = 11, height = 8.5)
par(font.main = 3, cex.main = cexvalue0, cex.axis = cexvalue1, cex.lab = cexvalue1, mar = margins)
contour(x = sigmavaluesx, y = sigmavaluesy, z, main = title, frame.plot = F, drawlabels = F, nlevels = 10, col = color6a)
abline(a = b0, b = b1, col = color14b)
points(datCOM, pch = 21, col = color13b, cex = cexvalue_1)
points(datMIS, pch = 3, col = color0, cex = cexvalue_1)
axis(side = 1, labels = T)
axis(side = 2, labels = T)
title(xlab = Xlab, ylab = Ylab, mgp = axislabelspacing)
dev.off()
###############################################################################
# figure 17: Regression Imputation + Error Scatterplot
###############################################################################
# labels
figure <- 17
text <- "Regression Imputation With Random Error Scatterplot"
if(figuretitles == 2){title <- paste0("Figure ", chapter, ".", figure, ": ", text)} else if(figuretitles == 1)
{title <- paste0("Figure ", chapter, ".", figure)} else {title <- ""}
Xlab <- "Perceived Control Over Pain"
Ylab <- "Depression"
yrange <- c(0,35)
xrange <- c(0,40)
zrange <- c(0,.006)
# parameters
muLW <- c(22.93, 13.79)
sigmaLW <- matrix(c(18.02, -7.35, -7.35, 35), ncol = 2)
muML <- c(20, 15)
sigmaML <- matrix(c(27, -11, -11, 38), ncol = 2)
b1 <- sigmaLW[2,1] / sigmaLW[1,1]
b0 <- muLW[2] - b1*muLW[1]
resvar <- sigmaML[2,2] - b1^2 * sigmaML[1,1]
set.seed(90291)
N <- 275
datML <- rmvnorm(N, muML, sigmaML)
datML[datML[,2] < 1, 2] <- 1
b0miss <- 3.86 # 50%
# b0miss <- 2.905 # 25%
b1miss <- -.193
rstar <- b0miss + b1miss*datML[,1] + rnorm(N, 0, 1)
missind <- rep(0, nrow(datML))
missind[rstar > 0] <- 1
datCOM <- datML[missind == 0,]
datMIS <- datML[missind == 1,]
datMIS[,2] <- b0 + b1*datMIS[,1] + rnorm(nrow(datMIS),0, sqrt(resvar))
# elevation data
sigmavaluesx <- seq(from = xrange[1], to = xrange[2], length = 90 + 1)
sigmavaluesy <- seq(from = yrange[1], to = yrange[2], length = 90 + 1)
z = matrix(zrange[1], ncol = length(sigmavaluesx), nrow = length(sigmavaluesy))
for(m in 1:length(sigmavaluesx)){
for(s in 1:length(sigmavaluesy)){
Y <- c(sigmavaluesx[m],sigmavaluesy[s])
ll <- dmvnorm(Y,muML,sigmaML)
z[m,s] <- ll
# if(ll > zrange[1]){z[s,m] <- ll}
}
}
# plot
# pdf(paste0(outputs, "Figure ", chapter, ".", figure, ".pdf"))
# par(font.main = 3, cex.main = cexvalue0, cex.axis = cexvalue_1, cex.lab = cexvalue0, mar = margins)
CairoPDF(file = paste0(outputs, "Figure ", chapter, ".", figure, ".pdf"), family = "Palatia", width = 11, height = 8.5)
par(font.main = 3, cex.main = cexvalue0, cex.axis = cexvalue1, cex.lab = cexvalue1, mar = margins)
contour(x = sigmavaluesx, y = sigmavaluesy, z, main = title, frame.plot = F, drawlabels = F, nlevels = 10, col = color6a)
abline(a = b0, b = b1, col = color0)
points(datCOM, pch = 21, col = color13b, cex = cexvalue_1)
points(datMIS, pch = 3, col = color0, cex = cexvalue_1)
axis(side = 1, labels = T)
axis(side = 2, labels = T)
title(xlab = Xlab, ylab = Ylab, mgp = axislabelspacing)
dev.off()
###############################################################################
# figure 18: Density plot of correlation (AMI and RI)
###############################################################################
# labels
figure <- 18
text <- "Sampling Distribution of Correlation \n Estimates From Mean and Regression Imputation"
if(figuretitles == 2){title <- paste0("Figure ", chapter, ".", figure, ": ", text)} else if(figuretitles == 1)
{title <- paste0("Figure ", chapter, ".", figure)} else {title <- ""}
Xlab <- "Correlation Estimates"
Ylab <- "Relative Probability"
yrange <- c(0,5)
xrange <- c(-1,.20)
# sim data
m <- 1
dat <- read.table(paste0(programs, "/mech", m, ".dat"))
names(dat) <- c("rep", "param", "LW", "AMI", "REG", "SREG", "ML")
dat$parnum <- rep(seq(1:13),1000)
datatolplot <- dat[dat$parnum == 4,]
linevalues <- cbind(-.40,yrange)
# plot
# pdf(paste0(outputs, "Figure ", chapter, ".", figure, ".pdf"))
# par(font.main = 3, cex.main = cexvalue0, cex.axis = cexvalue0, cex.lab = cexvalue0, mar = margins)
CairoPDF(file = paste0(outputs, "Figure ", chapter, ".", figure, ".pdf"), family = "Palatia", width = 11, height = 8.5)
par(font.main = 3, cex.main = cexvalue0, cex.axis = cexvalue1, cex.lab = cexvalue1, mar = margins)
plot(density(datatolplot$AMI), main = title, xlim = range(xrange), ylim = range(yrange), xlab = NA, ylab = NA, axes = F, frame.plot = F, lty = 2, lwd = linesize1)
# lines(density(datatolplot$ML),lty = 1)
# lines(density(datatolplot$AMI),lty = 1)
lines(density(datatolplot$REG),lty = 1)
lines(linevalues, col = color12b)
# lines(density(datatolplot$SREG),lty = 2, col = color12b)
# abline(v = -.40, lty = 1, col = color12b)
# legend("bottomleft", legend = c("Mean Imputation", "Regression Imputation"))
# legend(-1,5,legend = c("Mean Imputation", "Regression Imputation"),border = NULL, fill = NULL)
axis(side = 1, labels = T)
axis(side = 2, labels = F)
title(xlab = Xlab, ylab = Ylab, mgp = axislabelspacing)
dev.off()
###############################################################################
# figure 19: Density plot of mean (ML and LD)
###############################################################################
# labels
figure <- 19
text <- "Sampling Distribution of Mean \n Estimates From Deletion and Maximum Likelihood"
if(figuretitles == 2){title <- paste0("Figure ", chapter, ".", figure, ": ", text)} else if(figuretitles == 1)
{title <- paste0("Figure ", chapter, ".", figure)} else {title <- ""}
Xlab <- "Mean Estimates"
Ylab <- "Relative Probability"
yrange <- c(0,.9)
xrange <- c(17,23)
# sim data
m <- 1
dat <- read.table(paste0(programs, "/mech", m, ".dat"))
names(dat) <- c("rep", "param", "LW", "AMI", "REG", "SREG", "ML")
dat$parnum <- rep(seq(1:13),1000)
datatolplot <- dat[dat$parnum == 1,]
linevalues <- cbind(20,yrange)
# plot
# pdf(paste0(outputs, "Figure ", chapter, ".", figure, ".pdf"))
# par(font.main = 3, cex.main = cexvalue0, cex.axis = cexvalue0, cex.lab = cexvalue0, mar = margins)
CairoPDF(file = paste0(outputs, "Figure ", chapter, ".", figure, ".pdf"), family = "Palatia", width = 11, height = 8.5)
par(font.main = 3, cex.main = cexvalue0, cex.axis = cexvalue1, cex.lab = cexvalue1, mar = margins)
plot(density(datatolplot$LW), main = title, xlim = range(xrange), ylim = range(yrange), xlab = NA, ylab = NA, axes = F, frame.plot = F, lty = 2, lwd = linesize1)
lines(density(datatolplot$ML),lty = 1)
# lines(density(datatolplot$AMI),lty = 1)
# lines(density(datatolplot$REG),lty = 1)
lines(density(datatolplot$SREG),lty = 2, col = color12b)
lines(linevalues, col = color12b)
# abline(v = 20, lty = 1, col = color12b)
axis(side = 1, labels = T)
axis(side = 2, labels = F, at = c(0,.30,.60,.90))
title(xlab = Xlab, ylab = Ylab, mgp = axislabelspacing)
dev.off()
###############################################################################
# figure 20: Density plot of covariance (ML and LD)
###############################################################################
# labels
figure <- 20
text <- "Sampling Distribution of Covariance \n Estimates From Deletion and Maximum Likelihood"
if(figuretitles == 2){title <- paste0("Figure ", chapter, ".", figure, ": ", text)} else if(figuretitles == 1)
{title <- paste0("Figure ", chapter, ".", figure)} else {title <- ""}
Xlab <- "Covariance Estimates"
Ylab <- "Relative Probability"
yrange <- c(0,.1)
xrange <- c(-40,10)
# sim data
m <- 1
dat <- read.table(paste0(programs, "/mech", m, ".dat"))
names(dat) <- c("rep", "param", "LW", "AMI", "REG", "SREG", "ML")
dat$parnum <- rep(seq(1:13),1000)
datatolplot <- dat[dat$parnum == 12,]
linevalues <- cbind(-12.65,yrange)
# plot
# pdf(paste0(outputs, "Figure ", chapter, ".", figure, ".pdf"))
# par(font.main = 3, cex.main = cexvalue0, cex.axis = cexvalue0, cex.lab = cexvalue0, mar = margins)
CairoPDF(file = paste0(outputs, "Figure ", chapter, ".", figure, ".pdf"), family = "Palatia", width = 11, height = 8.5)
par(font.main = 3, cex.main = cexvalue0, cex.axis = cexvalue1, cex.lab = cexvalue1, mar = margins)
plot(density(datatolplot$LW), main = title, xlim = range(xrange), ylim = range(yrange), xlab = NA, ylab = NA, axes = F, frame.plot = F, lty = 2, lwd = linesize1)
lines(density(datatolplot$ML),lty = 1)
# lines(density(datatolplot$AMI),lty = 1, col = color12b)
# lines(density(datatolplot$REG),lty = 1, col = color12b)
# lines(density(datatolplot$SREG),lty = 3, col = color12b, lwd = linesize2)
# abline(v = -12.65, lty = 1, col = color12b)
lines(linevalues, col = color12b)
axis(side = 1, labels = T)
axis(side = 2, labels = F)
title(xlab = Xlab, ylab = Ylab, mgp = axislabelspacing)
dev.off()
###############################################################################
# figures 21-23: path diagrams
###############################################################################
###############################################################################
# figure 24: distribution w random slopes
###############################################################################
# labels
figure <- 24
text <- "Distribution of Trajectories from a Random Slope Model"
if(figuretitles == 2){title <- paste0("Figure ", chapter, ".", figure, ": ", text)} else if(figuretitles == 1)
{title <- paste0("Figure ", chapter, ".", figure)} else {title <- ""}
# plot ranges
Xlab <- "Weeks Since Baseline"
Ylab <- "Illness Severity"
xrange <- c(0,5)
yrange <- c(1,7)
# generate data
set.seed(90291)
raneff <- mvrnorm(50, c(5.315,-.311), matrix(c(.447, .193*sqrt(.447*.043), .193*sqrt(.447*.043), .043), nrow = 2, ncol = 2))
somedatax <- rnorm(26,50,3)
somedatay <- rnorm(26,50,3)
somedata <- cbind(somedatax,somedatay)
# plot
# pdf(paste0(outputs, "Figure ", chapter, ".", figure, ".pdf"))
# par(font.main = 3, cex.main = cexvalue0, cex.axis = cexvalue0, cex.lab = cexvalue0, mar = margins)
CairoPDF(file = paste0(outputs, "Figure ", chapter, ".", figure, ".pdf"), family = "Palatia", width = 11, height = 8.5)
par(font.main = 3, cex.main = cexvalue0, cex.axis = cexvalue1, cex.lab = cexvalue1, mar = margins)
plot(somedata, main = title, xlim = range(xrange), ylim = range(yrange), xlab = NA, ylab = NA, axes = F, frame.plot = F, col = colornull , cex = cexvalue_1)
for(p in 1:30){
abline(a = raneff[p,1], b = raneff[p,2], lty = 3, col = color11a)
}
abline(a = 5.410, b = -.117, lty = linetype2, lwd = linesize1)
abline(a = 5.410 - .127, b = -.117 - .258, lty = linetype1, lwd = linesize1)
axis(side = 1)
axis(side = 2)
title(xlab = Xlab, ylab = Ylab, mgp = axislabelspacing)
dev.off()
library(lavaan)
library(mdmb)
# read data
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
dat <- read.table(paste0(getwd(), "/math.dat"))
names(dat) <- c("id", "male", "lunchasst", "achievegrp", "stanread", "efficacy", "anxiety", "mathpre", "mathpost")
dat[dat == 999] <- NA
summary(dat$mathpost)
summary(dat$male)
summary(dat$anxiety)
# get mean for centering
model <- '
mathpost ~~ mathpost
anxiety ~~ anxiety
male ~~ male
'
fit <- sem(model, dat, meanstructure = TRUE, fixed.x = FALSE)
summary(fit, standardize = TRUE)
# model for y
mod.y <- list("model" = "linreg", "formula" = mathpost ~ male + I(anxiety-18.267) + I((anxiety-18.267)^2), nodes = seq(25, 95, by = 1))
# model for x1 (depression)
mod.x <- list( "model"="linreg", "formula" = anxiety ~ male, nodes = seq(-10, 65, by = 1))
# estimate model
ind <- list(depress = mod.x)
regression <- mdmb::frm_em(dat = dat, dep = mod.y, ind = ind)
summary(regression)
library(mdmb)
# model for y
mod.y <- list("model" = "linreg", "formula" = mathpost ~ male + I(anxiety-18.267) + I((anxiety-18.267)^2), nodes = seq(25, 95, by = 1))
# model for x1 (depression)
mod.x <- list( "model"="linreg", "formula" = anxiety ~ male, nodes = seq(-10, 65, by = 1))
# estimate model
ind <- list(depress = mod.x)
regression <- mdmb::frm_em(dat = dat, dep = mod.y, ind = ind)
summary(regression)
summary(dat$efficacy)
library(lavaan)
library(mdmb)
# read data
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
dat <- read.table(paste0(getwd(), "/math.dat"))
names(dat) <- c("id", "male", "lunchasst", "achievegrp", "stanread", "efficacy", "anxiety", "mathpre", "mathpost")
dat[dat == 999] <- NA
summary(dat$mathpost)
summary(dat$male)
summary(dat$anxiety)
summary(dat$efficacy)
summary(dat$mathpre)
summary(dat$stanread)
library(lavaan)
library(mdmb)
# read data
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
dat <- read.table(paste0(getwd(), "/math.dat"))
names(dat) <- c("id", "male", "lunchasst", "achievegrp", "stanread", "efficacy", "anxiety", "mathpre", "mathpost")
dat[dat == 999] <- NA
summary(dat$mathpost)
summary(dat$male)
summary(dat$anxiety)
summary(dat$efficacy)
summary(dat$mathpre)
summary(dat$stanread)
# get mean for centering
model <- '
mathpost ~~ mathpost
anxiety ~~ anxiety
male ~~ male
'
fit <- sem(model, dat, meanstructure = TRUE, fixed.x = FALSE)
summary(fit, standardize = TRUE)
# model for av
mod.a3 <- list("model" = "linreg", "formula" = stanread ~ mathpre + efficacy + mathpost + male + anxiety, nodes = seq(250, 720, by = 5))
# model for av
mod.a2 <- list("model" = "linreg", "formula" = mathpre ~ efficacy + mathpost + male + anxiety, nodes = seq(15, 85, by = 1))
# model for av
mod.a1 <- list("model" = "linreg", "formula" = efficacy ~ mathpost + male + anxiety, nodes = seq(1, 6, by = 1))
# model for y
mod.y <- list("model" = "linreg", "formula" = mathpost ~ male + I(anxiety-18.267) + I((anxiety-18.267)^2), nodes = seq(25, 95, by = 1))
# model for x1 (depression)
mod.x <- list( "model"="linreg", "formula" = anxiety ~ male, nodes = seq(-10, 65, by = 1))
# combine predictor models into a list
models.x <- list(anxiety = mod.x, mathpost = mod.y, efficacy = mod.a1, mathpre = mod.a2, )
# estimate model
regression <- mdmb::frm_em(dat = dat, dep = mod.a3, ind = models.x)
summary(regression)
# combine predictor models into a list
models.x <- list(anxiety = mod.x, mathpost = mod.y, efficacy = mod.a1, mathpre = mod.a2)
regression <- mdmb::frm_em(dat = dat, dep = mod.a3, ind = models.x)
summary(regression)
library(lavaan)
library(mdmb)
# read data
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
dat <- read.table(paste0(getwd(), "/math.dat"))
names(dat) <- c("id", "male", "lunchasst", "achievegrp", "stanread", "efficacy", "anxiety", "mathpre", "mathpost")
dat[dat == 999] <- NA
summary(dat$mathpost)
summary(dat$male)
summary(dat$anxiety)
# get mean for centering
model <- '
mathpost ~~ mathpost
anxiety ~~ anxiety
male ~~ male
'
fit <- sem(model, dat, meanstructure = TRUE, fixed.x = FALSE)
summary(fit, standardize = TRUE)
# model for y
mod.y <- list("model" = "linreg", "formula" = mathpost ~ male + I(anxiety-18.267) + I((anxiety-18.267)^2), nodes = seq(25, 95, by = 1))
# model for x1 (depression)
mod.x <- list( "model"="linreg", "formula" = anxiety ~ male, nodes = seq(-10, 65, by = 1))
# estimate model
ind <- list(depress = mod.x)
regression <- mdmb::frm_em(dat = dat, dep = mod.y, ind = ind)
summary(regression)
