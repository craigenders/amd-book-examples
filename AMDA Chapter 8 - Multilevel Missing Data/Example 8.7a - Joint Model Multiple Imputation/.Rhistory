# read imputed data from working directory
dat <- read.table("problemsolving2level.dat", na.strings = 999)
names(dat) <- c("school","student","condition","teachexp","eslpct","ethnic","male","frlunch",
"achievegrp","stanmath","efficacy1","efficacy2","probsolve1","probsolve2")
# define binary variable as factor
dat$frlunch <- factor(dat$frlunch, levels = c(0,1))
# select variables for imputation
dat$ones <- 1
vars2impute.l1 <- dat[,c("frlunch","stanmath","probsolve2")]
vars2impute.l2 <- as.data.frame(dat[,c("teachexp")])
complete.l1 <- dat[,c("ones","probsolve1")]
complete.l2 <- dat[,c("ones","condition")]
View(vars2impute.l2)
View(vars2impute.l1)
View(vars2impute.l2)
vars2impute.l2 <- dat[,c("teachexp")]
# example 8.7: joint model mulilevel multiple imputation w jomo
# requires fdir and jomo packages
# set working directory
fdir::set()
# read imputed data from working directory
dat <- read.table("problemsolving2level.dat", na.strings = 999)
names(dat) <- c("school","student","condition","teachexp","eslpct","ethnic","male","frlunch",
"achievegrp","stanmath","efficacy1","efficacy2","probsolve1","probsolve2")
# define binary variable as factor
dat$frlunch <- factor(dat$frlunch, levels = c(0,1))
# select variables for imputation
dat$ones <- 1
vars2impute.l1 <- dat[,c("frlunch","stanmath","probsolve2")]
vars2impute.l2 <- dat[,c("teachexp")]
complete.l1 <- dat[,c("ones","probsolve1")]
complete.l2 <- dat[,c("ones","condition")]
set.seed(90291)
imps <- jomo::jomo(vars2impute.l1, Y2 = as.data.frame(vars2impute.l2), X = complete.l1, X2 = complete.l2,
clus = dat$school, nburn = 2000, nbetween = 2000, nimp = 100)
# example 8.7: analyze joint model imputations from jomo
# requires fdir and mitml packages
# set working directory
fdir::set()
# load data
load("jomo.imps.Rdata")
# example 8.7: analyze joint model imputations from jomo
# requires fdir and mitml packages
# set working directory
fdir::set()
# load data
load("jomo.imps.Rdata")
View(imps)
# save data
names(imps[,4]) <- c("teachexp")
save(imps, file = "jomo.imps.Rdata")
# save data
names(imps[,4]) <- c("teachexp")
save(imps, file = "jomo.imps.Rdata")
# set working directory
fdir::set()
# load data
load("jomo.imps.Rdata")
# save data
names(imps[,4]) <- c("teachexp")
View(imps)
# save data
names(imps[,4]) <- c("teachexp")
imps[,4]
# save data
colnames(imps[,4]) <- c("teachexp")
# save data
colnames(imps)[4] <- c("teachexp")
save(imps, file = "jomo.imps.Rdata")
# set working directory
fdir::set()
# load data
load("jomo.imps.Rdata")
# analysis and pooling
implist <- mitml::as.mitml.list(split(imps, imps$Imputation))
model <- "probsolve2 ~ probsolve1  + stanmath + frlunch + teachexp + condition + (1 | school)"
analysis <- with(implist, lme4::lmer(model, REML = T))
View(imps)
model <- "probsolve2 ~ probsolve1  + stanmath + frlunch + teachexp + condition + (1 | clus)"
analysis <- with(implist, lme4::lmer(model, REML = T))
df <- 29 - 5 - 1
estimates <- mitml::testEstimates(analysis, extra.pars = T, df.com = df)
estimates
confint(estimates, level = .95)
# example 8.7: joint model mulilevel multiple imputation w jomo
# requires fdir and jomo packages
# set working directory
fdir::set()
# read imputed data from working directory
dat <- read.table("diary.dat", na.strings = 999)
names(dat) <- c('person','day','pain','sleep','posaff','negaff','lifegoal','female','educ','diagnoses','activity',
'painaccept','catastrophize','stress')
# example 8.7: random joint model mulilevel multiple imputation w jomo
# requires fdir and jomo packages
# set working directory
fdir::set()
# read imputed data from working directory
dat <- read.table("diary.dat", na.strings = 999)
names(dat) <- c('person','day','pain','sleep','posaff','negaff','lifegoal','female','educ','diagnoses','activity',
'painaccept','catastrophize','stress')
# define binary variable as factor
dat$female <- factor(dat$female, levels = c(0,1))
# define level-1 and level-2 variables
vars2impute.l1 <- c("posaff","pain","sleep")
vars2impute.l2 <- c("female","painacpt")
# example 8.7: random joint model mulilevel multiple imputation w jomo
# requires fdir and jomo packages
# set working directory
fdir::set()
# read imputed data from working directory
dat <- read.table("diary.dat", na.strings = 999)
names(dat) <- c('person','day','pain','sleep','posaff','negaff','lifegoal','female','educ','diagnoses','activity',
'painaccept','catastrophize','stress')
# define binary variable as factor
dat$female <- factor(dat$female, levels = c(0,1))
# define level-1 and level-2 variables
vars2impute.l1 <- dat[,c("posaff","pain","sleep")]
vars2impute.l2 <- dat[,c("female","painacpt")]
# example 8.7: random joint model mulilevel multiple imputation w jomo
# requires fdir and jomo packages
# set working directory
fdir::set()
# read imputed data from working directory
dat <- read.table("diary.dat", na.strings = 999)
names(dat) <- c('person','day','pain','sleep','posaff','negaff','lifegoal','female','educ','diagnoses','activity',
'painaccept','catastrophize','stress')
# define binary variable as factor
dat$female <- factor(dat$female, levels = c(0,1))
# define level-1 and level-2 variables
vars2impute.l1 <- dat[,c("posaff","pain","sleep")]
vars2impute.l2 <- dat[,c("female","painaccept")]
# joint model imputation with random covariance matrices in jomo
imps <- jomo(vars2impute.l1, Y2 = vars2impute.l2, clus = dat$person,
nburn = 300, nbetween = 300, nimp = 10, meth = "random")
imps <- jomo::jomo(vars2impute.l1, Y2 = vars2impute.l2, clus = dat$person,
nburn = 300, nbetween = 300, nimp = 10, meth = "random")
summary(vars2impute.l1)
# example 8.7: random joint model mulilevel multiple imputation w jomo
# requires fdir and jomo packages
# set working directory
fdir::set()
# read imputed data from working directory
dat <- read.table("diary.dat", na.strings = 999)
names(dat) <- c('person','day','pain','sleep','posaff','negaff','lifegoal','female','educ','diagnoses','activity',
'painaccept','catastrophize','stress')
# define binary variable as factor
dat$female <- factor(dat$female, levels = c(0,1))
summary(vars2impute.l1)
# example 8.7: random joint model mulilevel multiple imputation w jomo
# requires fdir and jomo packages
# set working directory
fdir::set()
# read imputed data from working directory
dat <- read.table("diary.dat", na.strings = 999)
names(dat) <- c('person','day','pain','sleep','posaff','negaff','lifegoal','female','educ','diagnoses','activity',
'painaccept','catastrophize','stress')
View(dat)
# define binary variable as factor
dat$female <- factor(dat$female, levels = c(0,1))
# define level-1 and level-2 variables
vars2impute.l1 <- dat[,c("posaff","pain","sleep")]
vars2impute.l2 <- dat[,c("female","painaccept")]
summary(vars2impute.l1)
summary(vars2impute.l2)
complete.l2 <- as.data.frame(dat[,c("female")])
# joint model imputation with random covariance matrices in jomo
imps <- jomo::jomo(vars2impute.l1, Y2 = vars2impute.l2, X2 = complete.l2, clus = dat$person,
nburn = 300, nbetween = 300, nimp = 10, meth = "random")
View(imps)
dat$ones <- 1
vars2impute.l1 <- dat[,c("posaff","pain","sleep")]
vars2impute.l2 <- as.data.frame(dat[,c("painaccept")])
complete.l2 <- dat[,c("ones","female")]
imps <- jomo::jomo(vars2impute.l1, Y2 = vars2impute.l2, X2 = complete.l2, clus = dat$person,
nburn = 300, nbetween = 300, nimp = 10, meth = "random")
# save data
colnames(imps)[4] <- c("painaccept")
save(imps, file = "jomo.imps.Rdata")
# example 8.7: random joint model mulilevel multiple imputation w jomo
# requires fdir and jomo packages
# set working directory
fdir::set()
# read imputed data from working directory
dat <- read.table("diary.dat", na.strings = 999)
names(dat) <- c('person','day','pain','sleep','posaff','negaff','lifegoal','female','educ','diagnoses','activity',
'painaccept','catastrophize','stress')
# define binary variable as a factor
dat$female <- factor(dat$female, levels = c(0,1))
# define level-1 and level-2 variables
dat$ones <- 1
vars2impute.l1 <- dat[,c("posaff","pain","sleep")]
vars2impute.l2 <- as.data.frame(dat[,c("painaccept")])
complete.l2 <- dat[,c("ones","female")]
# joint model imputation with random covariance matrices in jomo
imps <- jomo::jomo(vars2impute.l1, Y2 = vars2impute.l2, X2 = complete.l2, clus = dat$person,
nburn = 5000, nbetween = 2000, nimp = 100, meth = "random")
# save data
colnames(imps)[4] <- c("painaccept")
save(imps, file = "jomo.imps.Rdata")
# example 8.7: random joint model mulilevel multiple imputation w jomo
# requires fdir and jomo packages
# set working directory
fdir::set()
# read imputed data from working directory
dat <- read.table("diary.dat", na.strings = 999)
names(dat) <- c('person','day','pain','sleep','posaff','negaff','lifegoal','female','educ','diagnoses','activity',
'painaccept','catastrophize','stress')
# define binary variable as a factor
dat$female <- factor(dat$female, levels = c(0,1))
# define level-1 and level-2 variables
dat$ones <- 1
vars2impute.l1 <- dat[,c("posaff","pain","sleep")]
vars2impute.l2 <- as.data.frame(dat[,c("painaccept")])
complete.l2 <- dat[,c("ones","female")]
# joint model imputation with random covariance matrices in jomo
imps <- jomo::jomo(vars2impute.l1, Y2 = vars2impute.l2, X2 = complete.l2, clus = dat$person,
nburn = 5000, nbetween = 2000, nimp = 100, meth = "random")
# save data
colnames(imps)[4] <- c("painaccept")
save(imps, file = "jomo.imps.Rdata")
# joint model imputation with random covariance matrices in jomo
imps <- jomo::jomo(vars2impute.l1, Y2 = vars2impute.l2, X2 = complete.l2, clus = dat$person,
nburn = 2000, nbetween = 1000, nimp = 5, meth = "random")
# save data
colnames(imps)[4] <- c("painaccept")
save(imps, file = "jomo.imps.Rdata")
View(imps)
# example 8.7: random joint model mulilevel multiple imputation w jomo
# requires fdir and jomo packages
# set working directory
fdir::set()
# read imputed data from working directory
dat <- read.table("diary.dat", na.strings = 999)
names(dat) <- c('person','day','pain','sleep','posaff','negaff','lifegoal','female','educ','diagnoses','activity',
'painaccept','catastrophize','stress')
# define binary variable as a factor
dat$female <- factor(dat$female, levels = c(0,1))
dat$ones <- 1
vars2impute.l1 <- dat[,c("posaff","pain","sleep")]
vars2impute.l2 <- as.data.frame(dat[,c("painaccept")])
complete.l2 <- dat[,c("ones","female")]
# joint model imputation with random covariance matrices in jomo
imps <- jomo::jomo(vars2impute.l1, Y2 = vars2impute.l2, X2 = complete.l2, clus = dat$person,
nburn = 1000, nbetween = 1000, nimp = 5, meth = "random")
View(imps)
View(vars2impute.l1)
View(imps)
colnames(imps)[4] <- c("painaccept")
save(imps, file = "jomo.imps.Rdata")
# example 8.7: analyze joint model multilevel multiple imputations from jomo
# requires fdir and mitml packages
# set working directory
fdir::set()
# load data
load("jomo.imps.Rdata")
# create grouping variable that indexes clusters and imputations
imps$clus.by.imp <- imps$Imputation * 10000 + imps$clus
View(imps)
# create grouping variable that indexes clusters and imputations
imps$clus.by.imp <- imps$Imputation * 10000 + as.numeric(imps$clus)
# create grouping variable that indexes clusters and imputations
imps$clus.by.imp <- imps$Imputation * 1000 + as.numeric(imps$clus)
# add group means to data
imps <- gmc(imps, c("pain"), by = c("clus.by.imp"), FUN = mean, suffix = c(".l2mean", ".cent"), fulldataframe = TRUE)
# add group means to data
imps <- rockchalk::gmc(imps, c("pain"), by = c("clus.by.imp"), FUN = mean, suffix = c(".l2mean", ".cent"), fulldataframe = TRUE)
# within-cluster (group mean) center at mean of the group means
imps <- rockchalk::gmc(imps, c("pain"), by = c("clus"), FUN = mean, suffix = c(".meanl2mean", ".cwc"), fulldataframe = TRUE)
# center at grand means and imputed latent group means
imps$sleep.cgm <- imps$sleep - mean(imps$sleep)
View(imps)
imps$sleep.cgm <- imps$sleep - mean(imps$sleep)
imps$pain.l2mean.cgm <- imps$pain.l2mean - mean(imps$pain)
imps$painaccept.cgm <- imps$painaccept - mean(imps$painaccept)
implist <- mitml::as.mitml.list(split(imps, imps$Imputation))
model <- "posaff ~ pain.cwc + sleep.cgm + pain.l2mean.cgm + painaccept.cgm + female + (1 + pain.cwc | clus)"
analysis <- with(implist, lme4::lmer(model, REML = T))
imps <- imps[imps$Imputation > 0,]
load("jomo.imps.Rdata")
imps <- imps[imps$Imputation > 0,]
# create grouping variable that indexes clusters and imputations
imps$clus.by.imp <- imps$Imputation * 1000 + as.numeric(imps$clus)
# add group means to data
imps <- rockchalk::gmc(imps, c("pain"), by = c("clus.by.imp"), FUN = mean, suffix = c(".l2mean", ".cent"), fulldataframe = TRUE)
# within-cluster (group mean) center at mean of the group means
imps <- rockchalk::gmc(imps, c("pain"), by = c("clus"), FUN = mean, suffix = c(".meanl2mean", ".cwc"), fulldataframe = TRUE)
imps$sleep.cgm <- imps$sleep - mean(imps$sleep)
imps$pain.l2mean.cgm <- imps$pain.l2mean - mean(imps$pain)
imps$painaccept.cgm <- imps$painaccept - mean(imps$painaccept)
# analysis and pooling
implist <- mitml::as.mitml.list(split(imps, imps$Imputation))
model <- "posaff ~ pain.cwc + sleep.cgm + pain.l2mean.cgm + painaccept.cgm + female + (1 + pain.cwc | clus)"
analysis <- with(implist, lme4::lmer(model, REML = T))
df <- 132 - 5 - 1
estimates <- mitml::testEstimates(analysis, extra.pars = T, df.com = df)
estimates
confint(estimates, level = .95)
slope.diff <- c("pain.l2mean.cgm - pain.cwc")
mitml::testConstraints(analysis, constraints = slope.diff, df.com = df)
# example 8.7: analyze joint model multilevel multiple imputations from jomo
# requires fdir and mitml packages
# set working directory
fdir::set()
# load data
load("jomo.imps.Rdata")
imps <- imps[imps$Imputation > 0,]
# create grouping variable that indexes clusters and imputations
imps$clus.by.imp <- imps$Imputation * 100 + as.numeric(imps$clus)
View(imps)
# create grouping variable that indexes clusters and imputations
imps$clus.by.imp <- imps$Imputation * 1000 + as.numeric(imps$clus)
# example 8.9: maximum likelihood estimation for a multilevel regression with random intercepts;
# requires fdir and lavaan packages
# set working directory
fdir::set()
# read imputed data from working directory
dat <- read.table("problemsolving2level.dat", na.strings = 999)
names(dat) <- c("school","student","condition","teachexp","eslpct","ethnic","male","frlunch",
"achievegrp","stanmath","efficacy1","efficacy2","probsolve1","probsolve2")
# specify model
model <- '
level: 1
probsolve2 ~ probsolve1  + stanmath + frlunch
level: 2
probsolve2 ~ teachexp + condition
'
# estimate model in lavaan
fit <- lavaan::sem(model, dat, meanstructure = TRUE, fixed.x = FALSE, missing = "fiml")
# estimate model in lavaan
fit <- lavaan::sem(model, dat, meanstructure = TRUE, fixed.x = FALSE, missing = "fiml", cluster = "school")
View(dat)
summary(dat[,c("probsolve2","probsolve1","stanmath","frlunch","teachexp","condition")])
# example 8.9: maximum likelihood estimation for a multilevel regression with random intercepts;
# requires fdir and lavaan packages
# set working directory
fdir::set()
# read imputed data from working directory
dat <- read.table("problemsolving2level.dat", na.strings = 999)
names(dat) <- c("school","student","condition","teachexp","eslpct","ethnic","male","frlunch",
"achievegrp","stanmath","efficacy1","efficacy2","probsolve1","probsolve2")
summary(dat[,c("probsolve2","probsolve1","stanmath","frlunch","teachexp","condition")])
# example 8.9: maximum likelihood estimation for a multilevel regression with random intercepts;
# requires fdir and lavaan packages
# set working directory
fdir::set()
# read imputed data from working directory
dat <- read.table("problemsolving2level.dat", na.strings = 999)
names(dat) <- c("school","student","condition","teachexp","eslpct","ethnic","male","frlunch",
"achievegrp","stanmath","efficacy1","efficacy2","probsolve1","probsolve2")
summary(dat[,c("probsolve2","probsolve1","stanmath","frlunch","teachexp","condition")])
model <- '
level: 1
probsolve2 ~ probsolve1  + stanmath + frlunch
level: 2
probsolve2 ~ teachexp + condition
'
fit <- lavaan::sem(model, dat, meanstructure = TRUE, fixed.x = FALSE, missing = "fiml", cluster = "school")
summary(fit, standardize = TRUE)
summary(fit)
# estimate model in lavaan
fit <- lavaan::sem(model, dat, meanstructure = TRUE, fixed.x = FALSE, missing = "fiml", cluster = "school")
# estimate model in lavaan
fit <- lavaan::sem(model, dat, fixed.x = FALSE, missing = "fiml", cluster = "school")
summary(fit)
fit <- lavaan::sem(model, dat,cluster = "school")
summary(fit)
# estimate model in lavaan
fit <-
lavaan::sem(model, dat,cluster = "school")
fit <- lavaan::sem(model, dat,cluster = "school")
summary(fit)
model <- '
level: 1
probsolve2 ~~ probsolve2
level: 2
probsolve2 ~~ probsolve2
'
fit <- lavaan::sem(model, dat,cluster = "school")
summary(fit)
# example 8.9: maximum likelihood estimation for a multilevel regression with random intercepts;
# requires fdir and lavaan packages
# set working directory
fdir::set()
# read imputed data from working directory
dat <- read.table("problemsolving2level.dat", na.strings = 999)
names(dat) <- c("school","student","condition","teachexp","eslpct","ethnic","male","frlunch",
"achievegrp","stanmath","efficacy1","efficacy2","probsolve1","probsolve2")
summary(dat[,c("probsolve2","probsolve1","stanmath","frlunch","teachexp","condition")])
model <- '
level: 1
probsolve2 ~~ probsolve2
level: 2
probsolve2 ~~ probsolve2
'
fit <- lavaan::sem(model, dat,cluster = "school")
summary(fit)
summary(fit, nd = 4)
is.data.frame(dat)
fit <- sem(model,
data = dat,
cluster = "school")
summary(fit, nd = 4)
fit <- lavaan::sem(model,
data = dat,
cluster = "school")
summary(fit, nd = 4)
library(lavaan)
fit <- lavaan::sem(model,
data = dat,
cluster = "school")
summary(fit, nd = 4)
model <- '
level: 1
probsolve2 ~ probsolve1  + stanmath + frlunch
level: 2
probsolve2 ~ teachexp + condition
'
fit <- lavaan::sem(model,
data = dat,
cluster = "school")
summary(fit, nd = 4)
# estimate model in lavaan
fit <- lavaan::sem(model, dat,cluster = "school",meanstructure = TRUE, fixed.x = FALSE, missing = "fiml")
summary(fit, nd = 4)
summary(fit)
# missing data patterns and proportion observed data (coverage)
inspect(fit, "patterns")
inspect(fit, "coverage")
# example 8.9: maximum likelihood estimation for a multilevel regression with random intercepts;
# requires fdir and lavaan packages
# set working directory
fdir::set()
# read imputed data from working directory
dat <- read.table("problemsolving2level.dat", na.strings = 999)
names(dat) <- c("school","student","condition","teachexp","eslpct","ethnic","male","frlunch",
"achievegrp","stanmath","efficacy1","efficacy2","probsolve1","probsolve2")
summary(dat[,c("probsolve2","probsolve1","stanmath","frlunch","teachexp","condition")])
# specify model
model <- '
level: 1
probsolve2 ~ probsolve1  + stanmath + frlunch
level: 2
probsolve2 ~ teachexp + condition
'
# estimate model in lavaan
fit <- lavaan::sem(model, dat,cluster = "school", meanstructure = TRUE, fixed.x = FALSE, missing = "fiml")
summary(fit)
# estimate model in lavaan
library(lavaan)
fit <- lavaan::sem(model, dat,cluster = "school", meanstructure = TRUE, fixed.x = FALSE, missing = "fiml")
summary(fit)
# example 8.7: random joint model mulilevel multiple imputation w jomo
# requires fdir and jomo packages
# set working directory
fdir::set()
# read imputed data from working directory
dat <- read.table("diary.dat", na.strings = 999)
names(dat) <- c('person','day','pain','sleep','posaff','negaff','lifegoal','female','educ','diagnoses','activity',
'painaccept','catastrophize','stress')
# define binary variable as a factor
dat$female <- factor(dat$female, levels = c(0,1))
# define level-1 and level-2 variables
dat$ones <- 1
vars2impute.l1 <- dat[,c("posaff","pain","sleep")]
vars2impute.l2 <- as.data.frame(dat[,c("painaccept")])
complete.l2 <- dat[,c("ones","female")]
# joint model imputation with random covariance matrices in jomo
imps <- jomo::jomo(vars2impute.l1, Y2 = vars2impute.l2, X2 = complete.l2, clus = dat$person,
nburn = 2000, nbetween = 2000, nimp = 100, meth = "random")
# save data
colnames(imps)[4] <- c("painaccept")
save(imps, file = "jomo.imps.Rdata")
# example 8.7: analyze joint model multilevel multiple imputations from jomo
# requires fdir, rockchalk, lme4, and mitml packages
# set working directory
fdir::set()
# load data
load("jomo.imps.Rdata")
imps <- imps[imps$Imputation > 0,]
# create grouping variable that indexes clusters and imputations
imps$clus.by.imp <- imps$Imputation * 1000 + as.numeric(imps$clus)
# add group means to data
imps <- rockchalk::gmc(imps, c("pain"), by = c("clus.by.imp"), FUN = mean, suffix = c(".l2mean", ".cent"), fulldataframe = TRUE)
# within-cluster (group mean) center at the mean of the group means
imps <- rockchalk::gmc(imps, c("pain"), by = c("clus"), FUN = mean, suffix = c(".meanl2mean", ".cwc"), fulldataframe = TRUE)
imps$sleep.cgm <- imps$sleep - mean(imps$sleep)
imps$pain.l2mean.cgm <- imps$pain.l2mean - mean(imps$pain)
imps$painaccept.cgm <- imps$painaccept - mean(imps$painaccept)
implist <- mitml::as.mitml.list(split(imps, imps$Imputation))
model <- "posaff ~ pain.cwc + sleep.cgm + pain.l2mean.cgm + painaccept.cgm + female + (1 + pain.cwc | clus)"
analysis <- with(implist, lme4::lmer(model, REML = T))
df <- 132 - 5 - 1
estimates <- mitml::testEstimates(analysis, extra.pars = T, df.com = df)
estimates
confint(estimates, level = .95)
# test within- and between-cluster slope difference
slope.diff <- c("pain.l2mean.cgm - pain.cwc")
mitml::testConstraints(analysis, constraints = slope.diff, df.com = df)
# example 8.7: analyze joint model multilevel multiple imputations from jomo
# requires fdir and mitml packages
# set working directory
fdir::set()
# load data
load("jomo.imps.Rdata")
implist <- mitml::as.mitml.list(split(imps, imps$Imputation))
model <- "probsolve2 ~ probsolve1  + stanmath + frlunch + teachexp + condition + (1 | clus)"
analysis <- with(implist, lme4::lmer(model, REML = T))
# significance tests with barnard & rubin degrees of freedom
df <- 29 - 5 - 1
estimates <- mitml::testEstimates(analysis, extra.pars = T, df.com = df)
estimates
confint(estimates, level = .95)
