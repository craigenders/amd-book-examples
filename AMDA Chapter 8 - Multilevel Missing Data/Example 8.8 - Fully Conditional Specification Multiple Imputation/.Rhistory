# example 8.2: analyze model-based multiple imputations from blimp
# requires fdir, lme4, and mitml packages
# set working directory
fdir::set()
# read imputed data from working directory
imps <- read.table("imps.dat")
names(imps) <- c("Imputation","school","student","condition","teachexp","eslpct","ethnic","male","frlunch",
"achievegrp","stanmath","efficacy1","efficacy2","probsolve1","probsolve2",
"random.intercepts", "frlunch.latent", "frlunch.latentmean","stanmath.latentmean", "probsolv1.latentmean")
plot(density(imps$random.intercepts))
rockchalk::skewness(imps$random.intercepts)
rockchalk::kurtosis(imps$random.intercepts)
# analysis and pooling
implist <- mitml::as.mitml.list(split(imps, imps$Imputation))
model <- "probsolve2 ~ probsolve1  + stanmath + frlunch + teachexp + condition + (1 | school)"
analysis <- with(implist, lme4::lmer(model, REML = T))
# significance tests with barnard & rubin degrees of freedom
df <- 29 - 5 - 1
estimates <- mitml::testEstimates(analysis, extra.pars = T, df.com = df)
estimates
confint(estimates, level = .95)
# example 8.2: analyze model-based multiple imputations from blimp
# requires fdir, rockchalk, lme4, and mitml packages
# set working directory
fdir::set()
# read imputed data from working directory
imps <- read.table("imps.dat")
names(imps) <- c("Imputation","school","student","condition","teachexp","eslpct","ethnic","male","frlunch",
"achievegrp","stanmath","efficacy1","efficacy2","probsolve1","probsolve2",
"random.intercepts", "frlunch.latent", "frlunch.latentmean","stanmath.latentmean", "probsolv1.latentmean")
# distribution of random intercept residuals
plot(density(imps$random.intercepts))
rockchalk::skewness(imps$random.intercepts)
rockchalk::kurtosis(imps$random.intercepts)
# analysis and pooling
implist <- mitml::as.mitml.list(split(imps, imps$Imputation))
model <- "probsolve2 ~ probsolve1  + stanmath + frlunch + teachexp + condition + (1 | school)"
analysis <- with(implist, lme4::lmer(model, REML = T))
# significance tests with barnard & rubin degrees of freedom
df <- 29 - 5 - 1
estimates <- mitml::testEstimates(analysis, extra.pars = T, df.com = df)
estimates
confint(estimates, level = .95)
# example 8.2: analyze model-based multiple imputations from blimp
# requires fdir, rockchalk, lme4, and mitml packages
# set working directory
fdir::set()
# read imputed data from working directory
imps <- read.table("imps.dat")
names(imps) <- c('Imputation','person','day','pain','sleep','posaff','negaff','lifegoal','female','educ','diagnoses','activity',
'painaccept','catastrophize','stress','random.intercepts','random.slopes','pain.latentmean','sleep.latentmean')
# center and grand means and imputed latent group means
imps$sleep.cgm <- imps$sleep - mean(imps$sleep)
imps$pain.cwc <- imps$pain - imps$pain.mean
imps$pain.latmean.cgm <- imps$pain.latentmean - mean(imps$pain.latentmean)
imps$painaccept.cgm <- imps$painacpt - mean(imps$painaccept)
# example 8.3: analyze model-based multiple imputations from blimp
# requires fdir, rockchalk, lme4, and mitml packages
# set working directory
fdir::set()
# read imputed data from working directory
imps <- read.table("imps.dat")
names(imps) <- c('Imputation','person','day','pain','sleep','posaff','negaff','lifegoal','female','educ','diagnoses','activity',
'painaccept','catastrophize','stress','random.intercepts','random.slopes','pain.latentmean','sleep.latentmean')
# center and grand means and imputed latent group means
imps$sleep.cgm <- imps$sleep - mean(imps$sleep)
imps$pain.cwc <- imps$pain - imps$pain.latentmean
imps$pain.latmean.cgm <- imps$pain.latentmean - mean(imps$pain.latentmean)
imps$painaccept.cgm <- imps$painaccept - mean(imps$painaccept)
plot(density(imps$random.intercepts))
rockchalk::skewness(imps$random.intercepts)
rockchalk::kurtosis(imps$random.intercepts)
plot(density(imps$random.slopes))
rockchalk::skewness(imps$random.slopes)
rockchalk::kurtosis(imps$random.slopes)
implist <- as.mitml.list(split(imps, imps$Imputation))
model <- "posaff ~ pain.cwc + sleep.cgm + pain.latmean.cgm + painaccept.cgm + female + (1 + pain.cwc | person)"
analysis <- with(implist, lmer(model, REML = T))
# analysis and pooling
implist <- mitml::as.mitml.list(split(imps, imps$Imputation))
model <- "posaff ~ pain.cwc + sleep.cgm + pain.latmean.cgm + painaccept.cgm + female + (1 + pain.cwc | person)"
analysis <- with(implist, lmer(model, REML = T))
analysis <- with(implist, lme4::lmer(model, REML = T))
# significance tests with barnard & rubin degrees of freedom
df <- 132 - 5 - 1
estimates <- mitml::testEstimates(analysis, extra.pars = T, df.com = df)
estimates
confint(estimates, level = .95)
# test contextual effect
contextual <- c("pain.latmean.cgm - pain.cwc")
testConstraints(analysis, constraints = contextual, df.com = df)
mitml::testConstraints(analysis, constraints = contextual, df.com = df)
# example 8.2: analyze model-based multiple imputations for a multilevel regression with random intercepts
# requires fdir, rockchalk, lme4, and mitml packages
# set working directory
fdir::set()
# read imputed data from working directory
imps <- read.table("imps.dat")
names(imps) <- c("Imputation","school","student","condition","teachexp","eslpct","ethnic","male","frlunch",
"achievegrp","stanmath","efficacy1","efficacy2","probsolve1","probsolve2")
# distribution of random intercept residuals
plot(density(imps$random.intercepts))
rockchalk::skewness(imps$random.intercepts)
rockchalk::kurtosis(imps$random.intercepts)
# analysis and pooling
implist <- mitml::as.mitml.list(split(imps, imps$Imputation))
model <- "probsolve2 ~ probsolve1  + stanmath + frlunch + teachexp + condition + (1 | school)"
analysis <- with(implist, lme4::lmer(model, REML = T))
# significance tests with barnard & rubin degrees of freedom
df <- 29 - 5 - 1
estimates <- mitml::testEstimates(analysis, extra.pars = T, df.com = df)
estimates
confint(estimates, level = .95)
# example 8.8: analyze model-based multiple imputations for a multilevel regression with random intercepts
# requires fdir, rockchalk, lme4, and mitml packages
# set working directory
fdir::set()
# read imputed data from working directory
imps <- read.table("imps.dat")
names(imps) <- c("Imputation","school","student","condition","teachexp","eslpct","ethnic","male","frlunch",
"achievegrp","stanmath","efficacy1","efficacy2","probsolve1","probsolve2")
plot(density(imps$random.intercepts))
rockchalk::skewness(imps$random.intercepts)
rockchalk::kurtosis(imps$random.intercepts)
# analysis and pooling
implist <- mitml::as.mitml.list(split(imps, imps$Imputation))
model <- "probsolve2 ~ probsolve1  + stanmath + frlunch + teachexp + condition + (1 | school)"
analysis <- with(implist, lme4::lmer(model, REML = T))
# significance tests with barnard & rubin degrees of freedom
df <- 29 - 5 - 1
estimates <- mitml::testEstimates(analysis, extra.pars = T, df.com = df)
estimates
confint(estimates, level = .95)
